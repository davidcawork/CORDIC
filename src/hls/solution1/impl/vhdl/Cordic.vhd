-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Cordic is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (17 downto 0);
    y_V : IN STD_LOGIC_VECTOR (17 downto 0);
    z_V : IN STD_LOGIC_VECTOR (17 downto 0);
    x_out_V : OUT STD_LOGIC_VECTOR (17 downto 0);
    x_out_V_ap_vld : OUT STD_LOGIC;
    y_out_V : OUT STD_LOGIC_VECTOR (17 downto 0);
    y_out_V_ap_vld : OUT STD_LOGIC;
    z_out_V : OUT STD_LOGIC_VECTOR (17 downto 0);
    z_out_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of Cordic is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Cordic,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=14.541396,HLS_SYN_LAT=103,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=4,HLS_SYN_FF=4436,HLS_SYN_LUT=8179}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (41 downto 0) := "000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (41 downto 0) := "000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (41 downto 0) := "000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (41 downto 0) := "000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (41 downto 0) := "000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (41 downto 0) := "000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (41 downto 0) := "000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (41 downto 0) := "000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (41 downto 0) := "000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (41 downto 0) := "001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (41 downto 0) := "010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (41 downto 0) := "100000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv18_10000 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv18_1FFFF : STD_LOGIC_VECTOR (17 downto 0) := "011111111111111111";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv20_19220 : STD_LOGIC_VECTOR (19 downto 0) := "00011001001000100000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv20_E6DE0 : STD_LOGIC_VECTOR (19 downto 0) := "11100110110111100000";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv12_FEE : STD_LOGIC_VECTOR (11 downto 0) := "111111101110";
    constant ap_const_lv12_35 : STD_LOGIC_VECTOR (11 downto 0) := "000000110101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv12_12 : STD_LOGIC_VECTOR (11 downto 0) := "000000010010";
    constant ap_const_lv18_3FFFF : STD_LOGIC_VECTOR (17 downto 0) := "111111111111111111";
    constant ap_const_lv12_FEF : STD_LOGIC_VECTOR (11 downto 0) := "111111101111";
    constant ap_const_lv12_11 : STD_LOGIC_VECTOR (11 downto 0) := "000000010001";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv54_3FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal angulos_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal angulos_V_ce0 : STD_LOGIC;
    signal angulos_V_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_21_reg_253 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_4_reg_263 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_7_61_reg_273 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_8_reg_283 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_11_reg_295 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_s_reg_307 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_1_reg_320 : STD_LOGIC_VECTOR (17 downto 0);
    signal sh_assign_reg_332 : STD_LOGIC_VECTOR (4 downto 0);
    signal signbit_1_fu_638_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_1_reg_2633 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_10_fu_646_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_10_reg_2638 : STD_LOGIC_VECTOR (17 downto 0);
    signal newsignbit_3_fu_656_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_3_reg_2643 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp17_fu_748_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sel_tmp17_reg_2648 : STD_LOGIC_VECTOR (17 downto 0);
    signal sel_tmp19_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp19_reg_2653 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_ant_V_5_fu_804_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal y_ant_V_5_reg_2658 : STD_LOGIC_VECTOR (17 downto 0);
    signal x_ant_V_5_fu_836_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal x_ant_V_5_reg_2663 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_21_ph_fu_855_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond_fu_861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter33 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter34 : BOOLEAN;
    signal ap_block_state38_pp0_stage0_iter35 : BOOLEAN;
    signal ap_block_state39_pp0_stage0_iter36 : BOOLEAN;
    signal ap_block_state40_pp0_stage0_iter37 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter38 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter39 : BOOLEAN;
    signal ap_block_state43_pp0_stage0_iter40 : BOOLEAN;
    signal ap_block_state44_pp0_stage0_iter41 : BOOLEAN;
    signal ap_block_state45_pp0_stage0_iter42 : BOOLEAN;
    signal ap_block_state46_pp0_stage0_iter43 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter11_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter12_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter13_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter14_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter16_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter17_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter18_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter19_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter20_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter21_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter22_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter23_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter24_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter25_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter26_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter27_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter28_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter29_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter30_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter31_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter32_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter33_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter34_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter35_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter36_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter37_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter38_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter39_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter40_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter41_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter42_exitcond_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos_fu_867_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal pos_reg_2677 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal i_op_assign_fu_895_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_op_assign_reg_2682 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter1_i_op_assign_reg_2682 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_fu_920_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_29_reg_2694 : STD_LOGIC_VECTOR (6 downto 0);
    signal x_ant_V_1_fu_1016_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter2_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter3_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter4_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter5_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter6_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter7_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter8_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter9_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter10_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter11_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter12_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter13_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter14_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter15_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter16_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter17_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter18_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter19_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter20_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter21_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter22_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter23_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter24_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter25_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter26_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter27_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter28_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter29_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter30_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter31_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter32_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter33_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter34_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter35_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter36_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter37_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter38_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter39_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter40_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter41_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter42_x_ant_V_1_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal y_ant_V_1_fu_1116_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter2_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter3_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter4_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter5_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter6_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter7_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter8_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter9_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter10_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter11_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter12_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter13_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter14_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter15_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter16_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter17_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter18_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter19_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter20_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter21_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter22_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter23_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter24_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter25_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter26_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter27_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter28_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter29_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter30_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter31_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter32_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter33_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter34_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter35_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter36_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter37_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter38_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter39_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter40_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter41_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter42_y_ant_V_1_reg_2705 : STD_LOGIC_VECTOR (17 downto 0);
    signal angulos_V_load_reg_2711 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_20_fu_1167_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_20_reg_2721 : STD_LOGIC_VECTOR (15 downto 0);
    signal z_next_V_fu_1252_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter4_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter5_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter6_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter7_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter8_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter9_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter10_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter11_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter12_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter13_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter14_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter15_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter16_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter17_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter18_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter19_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter20_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter21_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter22_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter23_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter24_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter25_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter26_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter27_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter28_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter29_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter30_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter31_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter32_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter33_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter34_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter35_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter36_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter37_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter38_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter39_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter40_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter41_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter42_z_next_V_reg_2726 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_reg_2732 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_347_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal raiz_reg_2737 : STD_LOGIC_VECTOR (63 downto 0);
    signal isneg_5_fu_1267_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_5_reg_2742 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter39_isneg_5_reg_2742 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter40_isneg_5_reg_2742 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1285_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_33_reg_2751 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_fu_1311_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_reg_2756 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_35_fu_1319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_reg_2766 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter39_tmp_35_reg_2766 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter40_tmp_35_reg_2766 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_fu_1325_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_2774 : STD_LOGIC_VECTOR (11 downto 0);
    signal QUAN_INC_fu_1331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal QUAN_INC_reg_2783 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter39_QUAN_INC_reg_2783 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_1349_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_2789 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_97_fu_1357_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_97_reg_2795 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_reg_pp0_iter39_tmp_97_reg_2795 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_39_fu_1361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_2801 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_1367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_reg_2806 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_fu_1373_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_101_reg_2811 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_50_fu_1383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_reg_2816 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_1399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_2821 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_cast_fu_1410_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_amt_cast_reg_2826 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_1413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_2831 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_106_reg_2837 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_27_fu_1544_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_27_reg_2843 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_108_reg_2849 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_1558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_2855 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_fu_1586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_reg_2862 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter40_icmp1_reg_2862 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_fu_1592_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos1_reg_2868 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_54_fu_1610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_2873 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter40_tmp_54_reg_2873 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_1624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_reg_2880 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_fu_1649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_1_reg_2887 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_reg_2894 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_1663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_reg_2899 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_1669_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_58_reg_2905 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_1_fu_1673_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_1_reg_2910 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range1_all_zeros_1_fu_1684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_1_reg_2916 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp21_fu_1701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp21_reg_2921 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_28_fu_1765_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_28_reg_2927 : STD_LOGIC_VECTOR (17 downto 0);
    signal carry_1_i_fu_1782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_i_reg_2934 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_7_reg_2939 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_i_fu_1858_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_i_reg_2946 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_1936_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_reg_2951 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_not_fu_1944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_not_reg_2956 : STD_LOGIC_VECTOR (0 downto 0);
    signal this_assign_6_4_fu_2106_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal this_assign_6_4_reg_2961 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_29_fu_2624_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_29_reg_2966 : STD_LOGIC_VECTOR (35 downto 0);
    signal signbit_2_reg_2975 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_118_fu_2128_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_118_reg_2982 : STD_LOGIC_VECTOR (14 downto 0);
    signal Range1_all_ones_2_fu_2140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_reg_2987 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_fu_2146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_reg_2994 : STD_LOGIC_VECTOR (0 downto 0);
    signal K_m_t_V_fu_2345_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_enable_reg_pp0_iter43 : STD_LOGIC := '0';
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal tmp_6_fu_2361_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_Val2_12_fu_2393_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_12_reg_3020 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal overflow_fu_2433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_reg_3026 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_9_fu_2457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_9_reg_3032 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_15_fu_2471_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_15_reg_3039 : STD_LOGIC_VECTOR (17 downto 0);
    signal overflow_1_fu_2511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_1_reg_3045 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_10_fu_2535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_10_reg_3051 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter35 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter36 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter37 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter38 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter39 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter40 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter41 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter42 : STD_LOGIC := '0';
    signal ap_phi_mux_p_Val2_21_phi_fu_256_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_p_Val2_4_phi_fu_266_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_mux_p_Val2_7_61_phi_fu_276_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_mux_p_1_phi_fu_324_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_mux_sh_assign_phi_fu_336_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_25_fu_903_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal grp_fu_344_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP2_V_cast_fu_366_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_s_fu_370_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal isneg_fu_376_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_fu_388_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_fu_384_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal OP2_V_1_cast_fu_442_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_2_fu_446_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal underflow_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_1_fu_452_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_1_fu_464_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i1_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_3_fu_460_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal underflow_not_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_mux_fu_434_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_1_58_fu_472_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_s_fu_526_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_cast_fu_534_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_5_fu_538_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal newsignbit_2_fu_562_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_fu_544_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_3_not_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i2_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_6_fu_552_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal underflow_1_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_2_not_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_3_mux_fu_510_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_3_59_fu_608_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_9_fu_632_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_8_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_5_not_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_3_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_352_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_7_fu_616_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_2_60_fu_688_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sel_tmp12_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_708_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal brmerge9_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_6_mux_fu_600_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sel_tmp15_fu_734_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_42_fu_396_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp18_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge6_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_ant_V_fu_518_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal y_ant_V_2_fu_780_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal y_ant_V_3_fu_788_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal y_ant_V_4_fu_796_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal x_ant_V_fu_624_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal x_ant_V_2_fu_812_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal x_ant_V_3_fu_820_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal x_ant_V_4_fu_828_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal brmerge_i_i3_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_10_mux_fu_848_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_84_fu_873_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signo_cast_fu_881_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl_fu_908_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_fu_916_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sh_assign_cast1_fu_926_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal y_div_V_fu_936_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2613_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal isneg_2_fu_953_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_4_fu_963_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i6_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_16_fu_960_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal underflow_4_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_4_not_fu_994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_21_mux_fu_1000_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_4_62_fu_1008_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal x_div_V_fu_930_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_17_fu_1028_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal OP1_V_cast_fu_942_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_17_fu_1028_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_17_fu_1028_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_37_cast_fu_1034_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_18_fu_1042_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_88_fu_1038_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_19_fu_1056_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal isneg_3_fu_1048_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_5_fu_1062_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_1070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i7_fu_1088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_5_fu_1082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_5_not_fu_1094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_25_mux_fu_1100_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_6_63_fu_1108_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_28_fu_1124_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_46_cast_cast_fu_1131_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp31_fu_1135_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp135_cast_fu_1141_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_30_fu_1145_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_49_cast_fu_1150_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_20_fu_1167_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_20_fu_1167_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_43_cast_fu_1173_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_44_cast_fu_1177_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_22_fu_1180_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal isneg_4_fu_1186_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_6_fu_1198_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_1212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_1206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i8_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_23_fu_1194_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal underflow_6_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_not_fu_1230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_29_mux_fu_1236_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_8_64_fu_1244_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ireg_V_fu_1260_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_1275_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_96_fu_1289_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_34_fu_1293_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_1_fu_1301_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_1305_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_94_fu_1263_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_36_fu_1337_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_37_fu_1343_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_49_fu_1377_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_109_fu_1389_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_fu_1423_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_43_fu_1427_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_98_fu_1432_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal storemerge_fu_1436_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_47_fu_1450_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_71_cast_fu_1455_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_100_fu_1459_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_cast_op_fu_1477_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_102_fu_1482_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_103_fu_1489_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_104_fu_1493_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_s_fu_1499_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_48_fu_1472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_1504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_26_fu_1443_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_107_fu_1524_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_fu_1510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_i_i_fu_1528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_fu_1466_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_1_fu_1534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_1540_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_40_fu_1418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp137_cast_cast_fu_1563_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal exp_V_fu_1405_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_53_fu_1570_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_110_fu_1576_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal pos2_fu_1601_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_112_fu_1616_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_cast_fu_1597_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_fu_1630_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_56_fu_1634_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal lD_fu_1639_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp33_fu_1643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos2_cast_fu_1606_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_not_fu_1689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_1678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp20_fu_1695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_1707_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_1710_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp1_fu_1725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_1730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_1735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_1740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1719_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sel_tmp8_fu_1753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_1746_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_99_fu_1715_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sel_tmp9_fu_1758_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp136_demorgan_fu_1772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_fu_1776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_1796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_1806_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal or_cond115_i_fu_1801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_fu_1811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_1_i_fu_1816_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_1833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_1838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond117_i_fu_1824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_1828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp22_fu_1853_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_119_i_fu_1849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_122_i_fu_1843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp23_fu_1866_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_i_fu_1873_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp23_not_fu_1889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp34_fu_1895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_1_not_i_fu_1900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_1_no_fu_1905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_fu_1923_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge123_i_fu_1911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_mu_fu_1917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_120_i_fu_1930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_1881_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_i_65_fu_1950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp24_fu_1960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp35_fu_1970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp26_fu_1980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_1954_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp25_fu_1975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_0_not_s_fu_1992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i9_fu_1996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_2001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_0_i_fu_1965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge121_demorgan_s_fu_2012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_0_i_fu_1984_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge121_i_fu_2017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_7_fu_2023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_2_fu_2006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_0_i_not_fu_2035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp36_fu_2041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i9_fu_2029_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_2067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_9_66_fu_2060_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sel_tmp57_demorgan_fu_2079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp27_fu_2072_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal brmerge5_fu_2047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp29_fu_2090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp37_fu_2095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp30_fu_2101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_35_mux_fu_2053_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sel_tmp28_fu_2083_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Result_5_fu_2131_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_120_fu_2180_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_1_fu_2168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_i_i1_fu_2187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qbit_fu_2161_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_3_fu_2193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_30_fu_2152_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_64_fu_2199_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_31_fu_2203_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal newsignbit_8_fu_2209_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_119_fu_2173_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_2217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_fu_2223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_fu_2229_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_2242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_41_i_fu_2248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_1_fu_2236_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i9_fu_2265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i2_fu_2271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_2277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_1_fu_2253_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_fu_2260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge40_demorgan_i_fu_2288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp143_demorgan_fu_2294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp38_fu_2300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_8_fu_2306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_3_fu_2282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp39_fu_2317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i10_fu_2311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_8_not_fu_2323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_38_mux_fu_2329_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_10_67_fu_2337_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2365_p0 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_2365_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2379_p0 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_2379_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2365_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_11_fu_2405_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal newsignbit_9_fu_2397_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i4_fu_2415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_6_fu_2385_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i4_fu_2421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_2427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not38_i2_fu_2445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_0_not_i2_fu_2439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge39_i2_fu_2451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2379_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_17_fu_2483_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal newsignbit_10_fu_2475_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i5_fu_2493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_7_fu_2463_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i5_fu_2499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_2505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not38_i3_fu_2523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_0_not_i3_fu_2517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge39_i3_fu_2529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_9_not_fu_2545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i4_fu_2541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge7_fu_2550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_14_mux_fu_2555_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_s_69_fu_2562_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal underflow_10_not_fu_2581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i5_fu_2577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge8_fu_2586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_17_mux_fu_2591_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_5_70_fu_2598_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2613_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_2365_ap_start : STD_LOGIC;
    signal grp_fu_2365_ap_done : STD_LOGIC;
    signal grp_fu_2379_ap_start : STD_LOGIC;
    signal grp_fu_2379_ap_done : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (41 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal p_Val2_20_fu_1167_p10 : STD_LOGIC_VECTOR (15 downto 0);

    component Cordic_sitodp_32nbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Cordic_dsqrt_64nscud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Cordic_sdiv_34ns_dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (33 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component Cordic_mac_mulsubeOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component Cordic_mul_mul_18fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component Cordic_angulos_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;



begin
    angulos_V_U : component Cordic_angulos_V
    generic map (
        DataWidth => 15,
        AddressRange => 20,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => angulos_V_address0,
        ce0 => angulos_V_ce0,
        q0 => angulos_V_q0);

    Cordic_sitodp_32nbkb_U1 : component Cordic_sitodp_32nbkb
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_344_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_344_p1);

    Cordic_dsqrt_64nscud_U2 : component Cordic_dsqrt_64nscud
    generic map (
        ID => 1,
        NUM_STAGE => 31,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv64_0,
        din1 => tmp_32_reg_2732,
        ce => ap_const_logic_1,
        dout => grp_fu_347_p2);

    Cordic_sdiv_34ns_dEe_U3 : component Cordic_sdiv_34ns_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 38,
        din0_WIDTH => 34,
        din1_WIDTH => 18,
        dout_WIDTH => 34)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_2365_ap_start,
        done => grp_fu_2365_ap_done,
        din0 => grp_fu_2365_p0,
        din1 => grp_fu_2365_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2365_p2);

    Cordic_sdiv_34ns_dEe_U4 : component Cordic_sdiv_34ns_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 38,
        din0_WIDTH => 34,
        din1_WIDTH => 18,
        dout_WIDTH => 34)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_2379_ap_start,
        done => grp_fu_2379_ap_done,
        din0 => grp_fu_2379_p0,
        din1 => grp_fu_2379_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2379_p2);

    Cordic_mac_mulsubeOg_U5 : component Cordic_mac_mulsubeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 18,
        din2_WIDTH => 18,
        dout_WIDTH => 19)
    port map (
        din0 => grp_fu_2613_p0,
        din1 => y_div_V_fu_936_p2,
        din2 => ap_phi_mux_p_Val2_7_61_phi_fu_276_p4,
        dout => grp_fu_2613_p3);

    Cordic_mul_mul_18fYi_U6 : component Cordic_mul_mul_18fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 36)
    port map (
        din0 => ap_phi_mux_p_1_phi_fu_324_p4,
        din1 => this_assign_6_4_reg_2961,
        dout => p_Val2_29_fu_2624_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter34 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter35 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter36 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter37 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter38 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter39 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter40 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter41 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter42 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter43 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter43 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    p_1_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                p_1_reg_320 <= ap_const_lv18_10000;
            elsif (((ap_reg_pp0_iter42_exitcond_reg_2673 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter43 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_1_reg_320 <= K_m_t_V_fu_2345_p3;
            end if; 
        end if;
    end process;

    p_Val2_11_reg_295_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                p_Val2_11_reg_295 <= ap_const_lv18_0;
            elsif (((ap_reg_pp0_iter42_exitcond_reg_2673 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter43 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_Val2_11_reg_295 <= ap_reg_pp0_iter42_x_ant_V_1_reg_2699;
            end if; 
        end if;
    end process;

    p_Val2_21_reg_253_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                p_Val2_21_reg_253 <= p_Val2_21_ph_fu_855_p3;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_reg_pp0_iter3_exitcond_reg_2673 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_Val2_21_reg_253 <= z_next_V_reg_2726;
            end if; 
        end if;
    end process;

    p_Val2_4_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                p_Val2_4_reg_263 <= y_ant_V_5_reg_2658;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_2673 = ap_const_lv1_0))) then 
                p_Val2_4_reg_263 <= y_ant_V_1_fu_1116_p3;
            end if; 
        end if;
    end process;

    p_Val2_7_61_reg_273_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                p_Val2_7_61_reg_273 <= x_ant_V_5_reg_2663;
            elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_reg_pp0_iter1_exitcond_reg_2673 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_Val2_7_61_reg_273 <= x_ant_V_1_reg_2699;
            end if; 
        end if;
    end process;

    p_Val2_8_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                p_Val2_8_reg_283 <= ap_const_lv18_0;
            elsif (((ap_reg_pp0_iter42_exitcond_reg_2673 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter43 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_Val2_8_reg_283 <= ap_reg_pp0_iter42_y_ant_V_1_reg_2705;
            end if; 
        end if;
    end process;

    p_s_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                p_s_reg_307 <= ap_const_lv18_0;
            elsif (((ap_reg_pp0_iter42_exitcond_reg_2673 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter43 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_s_reg_307 <= ap_reg_pp0_iter42_z_next_V_reg_2726;
            end if; 
        end if;
    end process;

    sh_assign_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                sh_assign_reg_332 <= ap_const_lv5_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_2673 = ap_const_lv1_0))) then 
                sh_assign_reg_332 <= pos_reg_2677;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter37_exitcond_reg_2673 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                F2_reg_2774 <= F2_fu_1325_p2;
                QUAN_INC_reg_2783 <= QUAN_INC_fu_1331_p2;
                icmp_reg_2821 <= icmp_fu_1399_p2;
                isneg_5_reg_2742 <= ireg_V_fu_1260_p1(63 downto 63);
                man_V_reg_2756 <= man_V_fu_1311_p3;
                sh_amt_reg_2789 <= sh_amt_fu_1349_p3;
                tmp_101_reg_2811 <= tmp_101_fu_1373_p1;
                    tmp_33_reg_2751(10 downto 0) <= tmp_33_fu_1285_p1(10 downto 0);
                tmp_35_reg_2766 <= tmp_35_fu_1319_p2;
                tmp_39_reg_2801 <= tmp_39_fu_1361_p2;
                tmp_46_reg_2806 <= tmp_46_fu_1367_p2;
                tmp_50_reg_2816 <= tmp_50_fu_1383_p2;
                tmp_97_reg_2795 <= tmp_97_fu_1357_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter38_exitcond_reg_2673 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Range1_all_ones_1_reg_2887 <= Range1_all_ones_1_fu_1649_p2;
                Range1_all_zeros_1_reg_2916 <= Range1_all_zeros_1_fu_1684_p2;
                Range2_V_1_reg_2910 <= Range2_V_1_fu_1673_p2;
                icmp1_reg_2862 <= icmp1_fu_1586_p2;
                p_Val2_27_reg_2843 <= p_Val2_27_fu_1544_p2;
                pos1_reg_2868 <= pos1_fu_1592_p2;
                rev_reg_2880 <= rev_fu_1624_p2;
                sel_tmp13_reg_2855 <= sel_tmp13_fu_1558_p2;
                sel_tmp21_reg_2921 <= sel_tmp21_fu_1701_p2;
                sh_amt_cast_reg_2826 <= sh_amt_cast_fu_1410_p1;
                tmp_106_reg_2837 <= p_Val2_26_fu_1443_p3(17 downto 17);
                tmp_108_reg_2849 <= p_Val2_27_fu_1544_p2(17 downto 17);
                tmp_114_reg_2894 <= pos2_fu_1601_p2(11 downto 11);
                tmp_38_reg_2831 <= tmp_38_fu_1413_p2;
                tmp_54_reg_2873 <= tmp_54_fu_1610_p2;
                tmp_57_reg_2899 <= tmp_57_fu_1663_p2;
                    tmp_58_reg_2905(31 downto 0) <= tmp_58_fu_1669_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter39_exitcond_reg_2673 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Range1_all_ones_2_i_reg_2946 <= Range1_all_ones_2_i_fu_1858_p3;
                carry_1_i_reg_2934 <= carry_1_i_fu_1782_p2;
                deleted_ones_reg_2951 <= deleted_ones_fu_1936_p3;
                deleted_zeros_not_reg_2956 <= deleted_zeros_not_fu_1944_p2;
                newsignbit_7_reg_2939 <= p_Val2_28_fu_1765_p3(17 downto 17);
                p_Val2_28_reg_2927 <= p_Val2_28_fu_1765_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter41_exitcond_reg_2673 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Range1_all_ones_2_reg_2987 <= Range1_all_ones_2_fu_2140_p2;
                Range1_all_zeros_2_reg_2994 <= Range1_all_zeros_2_fu_2146_p2;
                p_Val2_29_reg_2966 <= p_Val2_29_fu_2624_p2;
                signbit_2_reg_2975 <= p_Val2_29_fu_2624_p2(35 downto 35);
                tmp_118_reg_2982 <= tmp_118_fu_2128_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_2673 = ap_const_lv1_0))) then
                angulos_V_load_reg_2711 <= angulos_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter10_exitcond_reg_2673 <= ap_reg_pp0_iter9_exitcond_reg_2673;
                ap_reg_pp0_iter10_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter9_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter10_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter9_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter10_z_next_V_reg_2726 <= ap_reg_pp0_iter9_z_next_V_reg_2726;
                ap_reg_pp0_iter11_exitcond_reg_2673 <= ap_reg_pp0_iter10_exitcond_reg_2673;
                ap_reg_pp0_iter11_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter10_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter11_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter10_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter11_z_next_V_reg_2726 <= ap_reg_pp0_iter10_z_next_V_reg_2726;
                ap_reg_pp0_iter12_exitcond_reg_2673 <= ap_reg_pp0_iter11_exitcond_reg_2673;
                ap_reg_pp0_iter12_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter11_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter12_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter11_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter12_z_next_V_reg_2726 <= ap_reg_pp0_iter11_z_next_V_reg_2726;
                ap_reg_pp0_iter13_exitcond_reg_2673 <= ap_reg_pp0_iter12_exitcond_reg_2673;
                ap_reg_pp0_iter13_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter12_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter13_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter12_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter13_z_next_V_reg_2726 <= ap_reg_pp0_iter12_z_next_V_reg_2726;
                ap_reg_pp0_iter14_exitcond_reg_2673 <= ap_reg_pp0_iter13_exitcond_reg_2673;
                ap_reg_pp0_iter14_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter13_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter14_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter13_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter14_z_next_V_reg_2726 <= ap_reg_pp0_iter13_z_next_V_reg_2726;
                ap_reg_pp0_iter15_exitcond_reg_2673 <= ap_reg_pp0_iter14_exitcond_reg_2673;
                ap_reg_pp0_iter15_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter14_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter15_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter14_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter15_z_next_V_reg_2726 <= ap_reg_pp0_iter14_z_next_V_reg_2726;
                ap_reg_pp0_iter16_exitcond_reg_2673 <= ap_reg_pp0_iter15_exitcond_reg_2673;
                ap_reg_pp0_iter16_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter15_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter16_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter15_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter16_z_next_V_reg_2726 <= ap_reg_pp0_iter15_z_next_V_reg_2726;
                ap_reg_pp0_iter17_exitcond_reg_2673 <= ap_reg_pp0_iter16_exitcond_reg_2673;
                ap_reg_pp0_iter17_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter16_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter17_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter16_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter17_z_next_V_reg_2726 <= ap_reg_pp0_iter16_z_next_V_reg_2726;
                ap_reg_pp0_iter18_exitcond_reg_2673 <= ap_reg_pp0_iter17_exitcond_reg_2673;
                ap_reg_pp0_iter18_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter17_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter18_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter17_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter18_z_next_V_reg_2726 <= ap_reg_pp0_iter17_z_next_V_reg_2726;
                ap_reg_pp0_iter19_exitcond_reg_2673 <= ap_reg_pp0_iter18_exitcond_reg_2673;
                ap_reg_pp0_iter19_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter18_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter19_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter18_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter19_z_next_V_reg_2726 <= ap_reg_pp0_iter18_z_next_V_reg_2726;
                ap_reg_pp0_iter20_exitcond_reg_2673 <= ap_reg_pp0_iter19_exitcond_reg_2673;
                ap_reg_pp0_iter20_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter19_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter20_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter19_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter20_z_next_V_reg_2726 <= ap_reg_pp0_iter19_z_next_V_reg_2726;
                ap_reg_pp0_iter21_exitcond_reg_2673 <= ap_reg_pp0_iter20_exitcond_reg_2673;
                ap_reg_pp0_iter21_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter20_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter21_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter20_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter21_z_next_V_reg_2726 <= ap_reg_pp0_iter20_z_next_V_reg_2726;
                ap_reg_pp0_iter22_exitcond_reg_2673 <= ap_reg_pp0_iter21_exitcond_reg_2673;
                ap_reg_pp0_iter22_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter21_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter22_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter21_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter22_z_next_V_reg_2726 <= ap_reg_pp0_iter21_z_next_V_reg_2726;
                ap_reg_pp0_iter23_exitcond_reg_2673 <= ap_reg_pp0_iter22_exitcond_reg_2673;
                ap_reg_pp0_iter23_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter22_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter23_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter22_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter23_z_next_V_reg_2726 <= ap_reg_pp0_iter22_z_next_V_reg_2726;
                ap_reg_pp0_iter24_exitcond_reg_2673 <= ap_reg_pp0_iter23_exitcond_reg_2673;
                ap_reg_pp0_iter24_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter23_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter24_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter23_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter24_z_next_V_reg_2726 <= ap_reg_pp0_iter23_z_next_V_reg_2726;
                ap_reg_pp0_iter25_exitcond_reg_2673 <= ap_reg_pp0_iter24_exitcond_reg_2673;
                ap_reg_pp0_iter25_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter24_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter25_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter24_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter25_z_next_V_reg_2726 <= ap_reg_pp0_iter24_z_next_V_reg_2726;
                ap_reg_pp0_iter26_exitcond_reg_2673 <= ap_reg_pp0_iter25_exitcond_reg_2673;
                ap_reg_pp0_iter26_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter25_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter26_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter25_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter26_z_next_V_reg_2726 <= ap_reg_pp0_iter25_z_next_V_reg_2726;
                ap_reg_pp0_iter27_exitcond_reg_2673 <= ap_reg_pp0_iter26_exitcond_reg_2673;
                ap_reg_pp0_iter27_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter26_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter27_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter26_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter27_z_next_V_reg_2726 <= ap_reg_pp0_iter26_z_next_V_reg_2726;
                ap_reg_pp0_iter28_exitcond_reg_2673 <= ap_reg_pp0_iter27_exitcond_reg_2673;
                ap_reg_pp0_iter28_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter27_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter28_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter27_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter28_z_next_V_reg_2726 <= ap_reg_pp0_iter27_z_next_V_reg_2726;
                ap_reg_pp0_iter29_exitcond_reg_2673 <= ap_reg_pp0_iter28_exitcond_reg_2673;
                ap_reg_pp0_iter29_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter28_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter29_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter28_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter29_z_next_V_reg_2726 <= ap_reg_pp0_iter28_z_next_V_reg_2726;
                ap_reg_pp0_iter2_exitcond_reg_2673 <= ap_reg_pp0_iter1_exitcond_reg_2673;
                ap_reg_pp0_iter2_x_ant_V_1_reg_2699 <= x_ant_V_1_reg_2699;
                ap_reg_pp0_iter2_y_ant_V_1_reg_2705 <= y_ant_V_1_reg_2705;
                ap_reg_pp0_iter30_exitcond_reg_2673 <= ap_reg_pp0_iter29_exitcond_reg_2673;
                ap_reg_pp0_iter30_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter29_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter30_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter29_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter30_z_next_V_reg_2726 <= ap_reg_pp0_iter29_z_next_V_reg_2726;
                ap_reg_pp0_iter31_exitcond_reg_2673 <= ap_reg_pp0_iter30_exitcond_reg_2673;
                ap_reg_pp0_iter31_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter30_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter31_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter30_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter31_z_next_V_reg_2726 <= ap_reg_pp0_iter30_z_next_V_reg_2726;
                ap_reg_pp0_iter32_exitcond_reg_2673 <= ap_reg_pp0_iter31_exitcond_reg_2673;
                ap_reg_pp0_iter32_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter31_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter32_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter31_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter32_z_next_V_reg_2726 <= ap_reg_pp0_iter31_z_next_V_reg_2726;
                ap_reg_pp0_iter33_exitcond_reg_2673 <= ap_reg_pp0_iter32_exitcond_reg_2673;
                ap_reg_pp0_iter33_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter32_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter33_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter32_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter33_z_next_V_reg_2726 <= ap_reg_pp0_iter32_z_next_V_reg_2726;
                ap_reg_pp0_iter34_exitcond_reg_2673 <= ap_reg_pp0_iter33_exitcond_reg_2673;
                ap_reg_pp0_iter34_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter33_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter34_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter33_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter34_z_next_V_reg_2726 <= ap_reg_pp0_iter33_z_next_V_reg_2726;
                ap_reg_pp0_iter35_exitcond_reg_2673 <= ap_reg_pp0_iter34_exitcond_reg_2673;
                ap_reg_pp0_iter35_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter34_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter35_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter34_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter35_z_next_V_reg_2726 <= ap_reg_pp0_iter34_z_next_V_reg_2726;
                ap_reg_pp0_iter36_exitcond_reg_2673 <= ap_reg_pp0_iter35_exitcond_reg_2673;
                ap_reg_pp0_iter36_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter35_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter36_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter35_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter36_z_next_V_reg_2726 <= ap_reg_pp0_iter35_z_next_V_reg_2726;
                ap_reg_pp0_iter37_exitcond_reg_2673 <= ap_reg_pp0_iter36_exitcond_reg_2673;
                ap_reg_pp0_iter37_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter36_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter37_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter36_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter37_z_next_V_reg_2726 <= ap_reg_pp0_iter36_z_next_V_reg_2726;
                ap_reg_pp0_iter38_exitcond_reg_2673 <= ap_reg_pp0_iter37_exitcond_reg_2673;
                ap_reg_pp0_iter38_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter37_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter38_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter37_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter38_z_next_V_reg_2726 <= ap_reg_pp0_iter37_z_next_V_reg_2726;
                ap_reg_pp0_iter39_QUAN_INC_reg_2783 <= QUAN_INC_reg_2783;
                ap_reg_pp0_iter39_exitcond_reg_2673 <= ap_reg_pp0_iter38_exitcond_reg_2673;
                ap_reg_pp0_iter39_isneg_5_reg_2742 <= isneg_5_reg_2742;
                ap_reg_pp0_iter39_tmp_35_reg_2766 <= tmp_35_reg_2766;
                ap_reg_pp0_iter39_tmp_97_reg_2795 <= tmp_97_reg_2795;
                ap_reg_pp0_iter39_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter38_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter39_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter38_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter39_z_next_V_reg_2726 <= ap_reg_pp0_iter38_z_next_V_reg_2726;
                ap_reg_pp0_iter3_exitcond_reg_2673 <= ap_reg_pp0_iter2_exitcond_reg_2673;
                ap_reg_pp0_iter3_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter2_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter3_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter2_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter40_exitcond_reg_2673 <= ap_reg_pp0_iter39_exitcond_reg_2673;
                ap_reg_pp0_iter40_icmp1_reg_2862 <= icmp1_reg_2862;
                ap_reg_pp0_iter40_isneg_5_reg_2742 <= ap_reg_pp0_iter39_isneg_5_reg_2742;
                ap_reg_pp0_iter40_tmp_35_reg_2766 <= ap_reg_pp0_iter39_tmp_35_reg_2766;
                ap_reg_pp0_iter40_tmp_54_reg_2873 <= tmp_54_reg_2873;
                ap_reg_pp0_iter40_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter39_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter40_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter39_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter40_z_next_V_reg_2726 <= ap_reg_pp0_iter39_z_next_V_reg_2726;
                ap_reg_pp0_iter41_exitcond_reg_2673 <= ap_reg_pp0_iter40_exitcond_reg_2673;
                ap_reg_pp0_iter41_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter40_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter41_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter40_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter41_z_next_V_reg_2726 <= ap_reg_pp0_iter40_z_next_V_reg_2726;
                ap_reg_pp0_iter42_exitcond_reg_2673 <= ap_reg_pp0_iter41_exitcond_reg_2673;
                ap_reg_pp0_iter42_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter41_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter42_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter41_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter42_z_next_V_reg_2726 <= ap_reg_pp0_iter41_z_next_V_reg_2726;
                ap_reg_pp0_iter4_exitcond_reg_2673 <= ap_reg_pp0_iter3_exitcond_reg_2673;
                ap_reg_pp0_iter4_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter3_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter4_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter3_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter4_z_next_V_reg_2726 <= z_next_V_reg_2726;
                ap_reg_pp0_iter5_exitcond_reg_2673 <= ap_reg_pp0_iter4_exitcond_reg_2673;
                ap_reg_pp0_iter5_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter4_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter5_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter4_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter5_z_next_V_reg_2726 <= ap_reg_pp0_iter4_z_next_V_reg_2726;
                ap_reg_pp0_iter6_exitcond_reg_2673 <= ap_reg_pp0_iter5_exitcond_reg_2673;
                ap_reg_pp0_iter6_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter5_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter6_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter5_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter6_z_next_V_reg_2726 <= ap_reg_pp0_iter5_z_next_V_reg_2726;
                ap_reg_pp0_iter7_exitcond_reg_2673 <= ap_reg_pp0_iter6_exitcond_reg_2673;
                ap_reg_pp0_iter7_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter6_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter7_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter6_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter7_z_next_V_reg_2726 <= ap_reg_pp0_iter6_z_next_V_reg_2726;
                ap_reg_pp0_iter8_exitcond_reg_2673 <= ap_reg_pp0_iter7_exitcond_reg_2673;
                ap_reg_pp0_iter8_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter7_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter8_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter7_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter8_z_next_V_reg_2726 <= ap_reg_pp0_iter7_z_next_V_reg_2726;
                ap_reg_pp0_iter9_exitcond_reg_2673 <= ap_reg_pp0_iter8_exitcond_reg_2673;
                ap_reg_pp0_iter9_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter8_x_ant_V_1_reg_2699;
                ap_reg_pp0_iter9_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter8_y_ant_V_1_reg_2705;
                ap_reg_pp0_iter9_z_next_V_reg_2726 <= ap_reg_pp0_iter8_z_next_V_reg_2726;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_exitcond_reg_2673 <= exitcond_reg_2673;
                ap_reg_pp0_iter1_i_op_assign_reg_2682 <= i_op_assign_reg_2682;
                exitcond_reg_2673 <= exitcond_fu_861_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_fu_861_p2 = ap_const_lv1_0))) then
                i_op_assign_reg_2682 <= i_op_assign_fu_895_p3;
                    tmp_29_reg_2694(6 downto 1) <= tmp_29_fu_920_p2(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                newsignbit_3_reg_2643 <= p_Val2_9_fu_632_p2(18 downto 18);
                p_Val2_10_reg_2638 <= p_Val2_9_fu_632_p2(18 downto 1);
                sel_tmp17_reg_2648 <= sel_tmp17_fu_748_p3;
                sel_tmp19_reg_2653 <= sel_tmp19_fu_774_p2;
                signbit_1_reg_2633 <= p_Val2_9_fu_632_p2(19 downto 19);
                x_ant_V_5_reg_2663 <= x_ant_V_5_fu_836_p3;
                y_ant_V_5_reg_2658 <= y_ant_V_5_fu_804_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state84)) then
                overflow_1_reg_3045 <= overflow_1_fu_2511_p2;
                overflow_reg_3026 <= overflow_fu_2433_p2;
                p_Val2_12_reg_3020 <= p_Val2_12_fu_2393_p1;
                p_Val2_15_reg_3039 <= p_Val2_15_fu_2471_p1;
                underflow_10_reg_3051 <= underflow_10_fu_2535_p2;
                underflow_9_reg_3032 <= underflow_9_fu_2457_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond_reg_2673 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_20_reg_2721 <= p_Val2_20_fu_1167_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                pos_reg_2677 <= pos_fu_867_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter36_exitcond_reg_2673 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                raiz_reg_2737 <= grp_fu_347_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter40_exitcond_reg_2673 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                this_assign_6_4_reg_2961 <= this_assign_6_4_fu_2106_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter5_exitcond_reg_2673 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_32_reg_2732 <= grp_fu_344_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_2673 = ap_const_lv1_0))) then
                x_ant_V_1_reg_2699 <= x_ant_V_1_fu_1016_p3;
                y_ant_V_1_reg_2705 <= y_ant_V_1_fu_1116_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_reg_pp0_iter2_exitcond_reg_2673 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                z_next_V_reg_2726 <= z_next_V_fu_1252_p3;
            end if;
        end if;
    end process;
    tmp_29_reg_2694(0) <= '0';
    tmp_33_reg_2751(11) <= '0';
    tmp_58_reg_2905(53 downto 32) <= "0000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, exitcond_fu_861_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter43, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter42)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_fu_861_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter42 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter43 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter42 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter43 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_fu_861_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_1325_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_33_fu_1285_p1));
    K_m_t_V_fu_2345_p3 <= 
        p_Val2_38_mux_fu_2329_p3 when (underflow_8_not_fu_2323_p2(0) = '1') else 
        p_Val2_10_67_fu_2337_p3;
        OP1_V_cast_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(i_op_assign_reg_2682),19));

        OP2_V_1_cast_fu_442_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y_V),19));

        OP2_V_cast_fu_366_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_V),19));

    QUAN_INC_fu_1331_p2 <= "1" when (signed(F2_fu_1325_p2) > signed(ap_const_lv12_10)) else "0";
    Range1_all_ones_1_fu_1649_p2 <= (tmp_54_fu_1610_p2 and tmp33_fu_1643_p2);
    Range1_all_ones_2_fu_2140_p2 <= "1" when (p_Result_5_fu_2131_p4 = ap_const_lv2_3) else "0";
    Range1_all_ones_2_i_65_fu_1950_p2 <= (carry_1_i_reg_2934 and Range1_all_ones_2_i_reg_2946);
    Range1_all_ones_2_i_fu_1858_p3 <= 
        Range1_all_ones_fu_1828_p2 when (or_cond117_i_fu_1824_p2(0) = '1') else 
        sel_tmp22_fu_1853_p3;
    Range1_all_ones_2_mu_fu_1917_p2 <= (carry_1_not_i_fu_1900_p2 and Range1_all_ones_2_i_fu_1858_p3);
    Range1_all_ones_fu_1828_p2 <= (Range2_all_ones_1_i_fu_1816_p3 and Range1_all_ones_1_reg_2887);
    Range1_all_zeros_1_fu_1684_p2 <= "1" when (man_V_reg_2756 = ap_const_lv54_0) else "0";
    Range1_all_zeros_2_fu_2146_p2 <= "1" when (p_Result_5_fu_2131_p4 = ap_const_lv2_0) else "0";
    Range1_all_zeros_2_i_fu_1873_p3 <= 
        p_122_i_fu_1843_p2 when (or_cond117_i_fu_1824_p2(0) = '1') else 
        sel_tmp23_fu_1866_p3;
    Range1_all_zeros_fu_1838_p2 <= (ap_const_lv1_1 xor Range1_all_ones_1_reg_2887);
    Range2_V_1_fu_1673_p2 <= std_logic_vector(shift_right(unsigned(man_V_reg_2756),to_integer(unsigned('0' & tmp_58_fu_1669_p1(31-1 downto 0)))));
    Range2_all_ones_1_i_fu_1816_p3 <= 
        Range2_all_ones_fu_1811_p2 when (or_cond115_i_fu_1801_p2(0) = '1') else 
        rev1_fu_1796_p2;
    Range2_all_ones_1_no_fu_1905_p2 <= (ap_const_lv1_1 xor Range2_all_ones_1_i_fu_1816_p3);
    Range2_all_ones_fu_1811_p2 <= "1" when (Range2_V_1_reg_2910 = r_V_fu_1806_p2) else "0";
    angulos_V_address0 <= tmp_25_fu_903_p1(5 - 1 downto 0);

    angulos_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            angulos_V_ce0 <= ap_const_logic_1;
        else 
            angulos_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state47 <= ap_CS_fsm(3);
    ap_CS_fsm_state84 <= ap_CS_fsm(40);
    ap_CS_fsm_state85 <= ap_CS_fsm(41);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage0_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage0_iter40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage0_iter41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage0_iter42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage0_iter43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_fu_861_p2)
    begin
        if ((exitcond_fu_861_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter43, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37, ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter39, ap_enable_reg_pp0_iter40, ap_enable_reg_pp0_iter41, ap_enable_reg_pp0_iter42)
    begin
        if (((ap_enable_reg_pp0_iter42 = ap_const_logic_0) and (ap_enable_reg_pp0_iter41 = ap_const_logic_0) and (ap_enable_reg_pp0_iter40 = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter43 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_1_phi_fu_324_p4_assign_proc : process(p_1_reg_320, ap_reg_pp0_iter42_exitcond_reg_2673, K_m_t_V_fu_2345_p3, ap_enable_reg_pp0_iter43, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_reg_pp0_iter42_exitcond_reg_2673 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter43 = ap_const_logic_1))) then 
            ap_phi_mux_p_1_phi_fu_324_p4 <= K_m_t_V_fu_2345_p3;
        else 
            ap_phi_mux_p_1_phi_fu_324_p4 <= p_1_reg_320;
        end if; 
    end process;


    ap_phi_mux_p_Val2_21_phi_fu_256_p4_assign_proc : process(p_Val2_21_reg_253, ap_reg_pp0_iter3_exitcond_reg_2673, z_next_V_reg_2726, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_reg_pp0_iter3_exitcond_reg_2673 = ap_const_lv1_0))) then 
            ap_phi_mux_p_Val2_21_phi_fu_256_p4 <= z_next_V_reg_2726;
        else 
            ap_phi_mux_p_Val2_21_phi_fu_256_p4 <= p_Val2_21_reg_253;
        end if; 
    end process;


    ap_phi_mux_p_Val2_4_phi_fu_266_p4_assign_proc : process(p_Val2_4_reg_263, exitcond_reg_2673, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, y_ant_V_1_fu_1116_p3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_reg_2673 = ap_const_lv1_0))) then 
            ap_phi_mux_p_Val2_4_phi_fu_266_p4 <= y_ant_V_1_fu_1116_p3;
        else 
            ap_phi_mux_p_Val2_4_phi_fu_266_p4 <= p_Val2_4_reg_263;
        end if; 
    end process;


    ap_phi_mux_p_Val2_7_61_phi_fu_276_p4_assign_proc : process(p_Val2_7_61_reg_273, ap_reg_pp0_iter1_exitcond_reg_2673, x_ant_V_1_reg_2699, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_reg_pp0_iter1_exitcond_reg_2673 = ap_const_lv1_0))) then 
            ap_phi_mux_p_Val2_7_61_phi_fu_276_p4 <= x_ant_V_1_reg_2699;
        else 
            ap_phi_mux_p_Val2_7_61_phi_fu_276_p4 <= p_Val2_7_61_reg_273;
        end if; 
    end process;


    ap_phi_mux_sh_assign_phi_fu_336_p4_assign_proc : process(sh_assign_reg_332, exitcond_reg_2673, ap_CS_fsm_pp0_stage0, pos_reg_2677, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_reg_2673 = ap_const_lv1_0))) then 
            ap_phi_mux_sh_assign_phi_fu_336_p4 <= pos_reg_2677;
        else 
            ap_phi_mux_sh_assign_phi_fu_336_p4 <= sh_assign_reg_332;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge121_demorgan_s_fu_2012_p2 <= (newsignbit_7_reg_2939 and deleted_ones_0_i_fu_1965_p2);
    brmerge121_i_fu_2017_p2 <= (brmerge121_demorgan_s_fu_2012_p2 xor ap_const_lv1_1);
    brmerge123_i_fu_1911_p2 <= (carry_1_not_i_fu_1900_p2 or Range2_all_ones_1_no_fu_1905_p2);
    brmerge39_i2_fu_2451_p2 <= (p_not38_i2_fu_2445_p2 or newsignbit_0_not_i2_fu_2439_p2);
    brmerge39_i3_fu_2529_p2 <= (p_not38_i3_fu_2523_p2 or newsignbit_0_not_i3_fu_2517_p2);
    brmerge40_demorgan_i_fu_2288_p2 <= (newsignbit_8_fu_2209_p3 and deleted_ones_1_fu_2253_p3);
    brmerge5_fu_2047_p2 <= (tmp36_fu_2041_p2 or brmerge121_demorgan_s_fu_2012_p2);
    brmerge6_fu_682_p2 <= (newsignbit_3_fu_656_p3 or neg_src_5_not_fu_676_p2);
    brmerge7_fu_2550_p2 <= (underflow_9_not_fu_2545_p2 or overflow_reg_3026);
    brmerge8_fu_2586_p2 <= (underflow_10_not_fu_2581_p2 or overflow_1_reg_3045);
    brmerge9_fu_594_p2 <= (newsignbit_2_fu_562_p3 or neg_src_3_not_fu_588_p2);
    brmerge_i2_fu_2271_p2 <= (p_not_i9_fu_2265_p2 or newsignbit_8_fu_2209_p3);
    brmerge_i4_fu_2421_p2 <= (p_not_i4_fu_2415_p2 or newsignbit_9_fu_2397_p3);
    brmerge_i5_fu_2499_p2 <= (p_not_i5_fu_2493_p2 or newsignbit_10_fu_2475_p3);
    brmerge_i9_fu_1996_p2 <= (newsignbit_7_reg_2939 or deleted_zeros_0_not_s_fu_1992_p2);
    brmerge_i_i10_fu_2311_p2 <= (underflow_8_fu_2306_p2 or overflow_3_fu_2282_p2);
    brmerge_i_i1_fu_498_p2 <= (newsignbit_1_fu_464_p3 xor isneg_1_fu_452_p3);
    brmerge_i_i2_fu_582_p2 <= (signbit_fu_544_p3 xor newsignbit_2_fu_562_p3);
    brmerge_i_i3_fu_844_p2 <= (signbit_1_reg_2633 xor newsignbit_3_reg_2643);
    brmerge_i_i4_fu_2541_p2 <= (underflow_9_reg_3032 or overflow_reg_3026);
    brmerge_i_i5_fu_2577_p2 <= (underflow_10_reg_3051 or overflow_1_reg_3045);
    brmerge_i_i6_fu_988_p2 <= (newsignbit_4_fu_963_p3 xor isneg_2_fu_953_p3);
    brmerge_i_i7_fu_1088_p2 <= (newsignbit_5_fu_1062_p3 xor isneg_3_fu_1048_p3);
    brmerge_i_i8_fu_1224_p2 <= (newsignbit_6_fu_1198_p3 xor isneg_4_fu_1186_p3);
    brmerge_i_i9_fu_2029_p2 <= (underflow_7_fu_2023_p2 or overflow_2_fu_2006_p2);
    brmerge_i_i_fu_422_p2 <= (newsignbit_fu_388_p3 xor isneg_fu_376_p3);
    carry_1_i_fu_1782_p2 <= (tmp32_fu_1776_p2 and sel_tmp8_fu_1753_p2);
    carry_1_not_i_fu_1900_p2 <= (tmp_108_reg_2849 or tmp34_fu_1895_p2);
    carry_fu_2223_p2 <= (tmp_65_fu_2217_p2 and tmp_119_fu_2173_p3);
    deleted_ones_0_i_fu_1965_p2 <= (sel_tmp24_fu_1960_p2 or deleted_ones_reg_2951);
    deleted_ones_1_fu_2253_p3 <= 
        p_41_i_fu_2248_p2 when (carry_fu_2223_p2(0) = '1') else 
        Range1_all_ones_2_reg_2987;
    deleted_ones_fu_1936_p3 <= 
        Range1_all_ones_2_mu_fu_1917_p2 when (brmerge123_i_fu_1911_p2(0) = '1') else 
        p_120_i_fu_1930_p2;
    deleted_zeros_0_not_s_fu_1992_p2 <= (deleted_zeros_not_reg_2956 and ap_reg_pp0_iter40_tmp_54_reg_2873);
    deleted_zeros_1_fu_2236_p3 <= 
        Range1_all_ones_2_reg_2987 when (carry_fu_2223_p2(0) = '1') else 
        Range1_all_zeros_2_reg_2994;
    deleted_zeros_fu_1881_p3 <= 
        Range1_all_ones_2_i_fu_1858_p3 when (carry_1_i_fu_1782_p2(0) = '1') else 
        Range1_all_zeros_2_i_fu_1873_p3;
    deleted_zeros_not_fu_1944_p2 <= (deleted_zeros_fu_1881_p3 xor ap_const_lv1_1);
    exitcond_fu_861_p2 <= "1" when (ap_phi_mux_sh_assign_phi_fu_336_p4 = ap_const_lv5_14) else "0";
    exp_V_fu_1405_p2 <= std_logic_vector(signed(ap_const_lv12_C01) + signed(tmp_33_reg_2751));
    exp_tmp_V_fu_1275_p4 <= ireg_V_fu_1260_p1(62 downto 52);

    grp_fu_2365_ap_start_assign_proc : process(ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_2365_ap_start <= ap_const_logic_1;
        else 
            grp_fu_2365_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2365_p0 <= (p_Val2_11_reg_295 & ap_const_lv16_0);
    grp_fu_2365_p1 <= tmp_6_fu_2361_p1(18 - 1 downto 0);

    grp_fu_2379_ap_start_assign_proc : process(ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_2379_ap_start <= ap_const_logic_1;
        else 
            grp_fu_2379_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2379_p0 <= (p_Val2_8_reg_283 & ap_const_lv16_0);
    grp_fu_2379_p1 <= tmp_6_fu_2361_p1(18 - 1 downto 0);
    grp_fu_2613_p0 <= OP1_V_cast_fu_942_p1(2 - 1 downto 0);
    grp_fu_344_p0 <= (tmp_49_cast_fu_1150_p1 or ap_const_lv32_1);
    i_op_assign_fu_895_p3 <= 
        signo_cast_fu_881_p3 when (tmp_20_fu_889_p2(0) = '1') else 
        ap_const_lv2_0;
    icmp1_fu_1586_p2 <= "1" when (signed(tmp_110_fu_1576_p4) > signed(ap_const_lv11_0)) else "0";
    icmp_fu_1399_p2 <= "1" when (signed(tmp_109_fu_1389_p4) < signed(ap_const_lv8_1)) else "0";
    ireg_V_fu_1260_p1 <= raiz_reg_2737;
    isneg_1_fu_452_p3 <= p_Val2_2_fu_446_p2(18 downto 18);
    isneg_2_fu_953_p3 <= grp_fu_2613_p3(18 downto 18);
    isneg_3_fu_1048_p3 <= p_Val2_18_fu_1042_p2(18 downto 18);
    isneg_4_fu_1186_p3 <= p_Val2_22_fu_1180_p2(18 downto 18);
    isneg_5_fu_1267_p3 <= ireg_V_fu_1260_p1(63 downto 63);
    isneg_6_fu_2385_p3 <= grp_fu_2365_p2(33 downto 33);
    isneg_7_fu_2463_p3 <= grp_fu_2379_p2(33 downto 33);
    isneg_fu_376_p3 <= p_Val2_s_fu_370_p2(18 downto 18);
    lD_fu_1639_p1 <= tmp_56_fu_1634_p2(1 - 1 downto 0);
    man_V_1_fu_1305_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_1_fu_1301_p1));
    man_V_fu_1311_p3 <= 
        man_V_1_fu_1305_p2 when (isneg_5_fu_1267_p3(0) = '1') else 
        p_Result_1_fu_1301_p1;
    neg_src_0_i_fu_1984_p3 <= 
        tmp_61_fu_1954_p2 when (sel_tmp26_fu_1980_p2(0) = '1') else 
        sel_tmp25_fu_1975_p2;
    neg_src_0_i_not_fu_2035_p2 <= (neg_src_0_i_fu_1984_p3 xor ap_const_lv1_1);
    neg_src_3_not_fu_588_p2 <= (signbit_fu_544_p3 xor ap_const_lv1_1);
    neg_src_5_not_fu_676_p2 <= (signbit_1_fu_638_p3 xor ap_const_lv1_1);
    newsignbit_0_not_i2_fu_2439_p2 <= (newsignbit_9_fu_2397_p3 xor ap_const_lv1_1);
    newsignbit_0_not_i3_fu_2517_p2 <= (newsignbit_10_fu_2475_p3 xor ap_const_lv1_1);
    newsignbit_10_fu_2475_p3 <= grp_fu_2379_p2(17 downto 17);
    newsignbit_1_fu_464_p3 <= p_Val2_2_fu_446_p2(17 downto 17);
    newsignbit_2_fu_562_p3 <= p_Val2_5_fu_538_p2(18 downto 18);
    newsignbit_3_fu_656_p3 <= p_Val2_9_fu_632_p2(18 downto 18);
    newsignbit_4_fu_963_p3 <= grp_fu_2613_p3(17 downto 17);
    newsignbit_5_fu_1062_p3 <= p_Val2_19_fu_1056_p2(17 downto 17);
    newsignbit_6_fu_1198_p3 <= p_Val2_22_fu_1180_p2(17 downto 17);
    newsignbit_8_fu_2209_p3 <= p_Val2_31_fu_2203_p2(17 downto 17);
    newsignbit_9_fu_2397_p3 <= grp_fu_2365_p2(17 downto 17);
    newsignbit_fu_388_p3 <= p_Val2_s_fu_370_p2(17 downto 17);
    or_cond115_i_fu_1801_p2 <= (tmp_57_reg_2899 and rev1_fu_1796_p2);
    or_cond117_i_fu_1824_p2 <= (tmp_57_reg_2899 and rev_reg_2880);
    overflow_1_fu_2511_p2 <= (tmp_18_fu_2505_p2 and brmerge_i5_fu_2499_p2);
    overflow_2_fu_2006_p2 <= (tmp_62_fu_2001_p2 and brmerge_i9_fu_1996_p2);
    overflow_3_fu_2282_p2 <= (tmp_67_fu_2277_p2 and brmerge_i2_fu_2271_p2);
    overflow_fu_2433_p2 <= (tmp_13_fu_2427_p2 and brmerge_i4_fu_2421_p2);
    p_119_i_fu_1849_p2 <= (rev_reg_2880 or Range1_all_zeros_1_reg_2916);
    p_120_i_fu_1930_p2 <= (tmp_115_fu_1923_p3 or Range1_all_zeros_fu_1838_p2);
    p_122_i_fu_1843_p2 <= (tmp_59_fu_1833_p2 and Range1_all_zeros_fu_1838_p2);
    p_38_i_fu_2260_p2 <= (carry_fu_2223_p2 and Range1_all_ones_2_reg_2987);
    p_41_i_fu_2248_p2 <= (tmp_66_fu_2242_p2 and signbit_2_reg_2975);
    p_Result_1_fu_1301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_1293_p3),54));
    p_Result_5_fu_2131_p4 <= p_Val2_29_fu_2624_p2(35 downto 34);
    p_Result_s_fu_1499_p2 <= (tmp_104_fu_1493_p2 and man_V_reg_2756);
    p_Val2_10_67_fu_2337_p3 <= 
        ap_const_lv18_20000 when (underflow_8_fu_2306_p2(0) = '1') else 
        p_Val2_31_fu_2203_p2;
    p_Val2_10_fu_646_p4 <= p_Val2_9_fu_632_p2(18 downto 1);
    p_Val2_10_mux_fu_848_p3 <= 
        ap_const_lv18_1FFFF when (brmerge_i_i3_fu_844_p2(0) = '1') else 
        p_Val2_10_reg_2638;
    p_Val2_12_fu_2393_p1 <= grp_fu_2365_p2(18 - 1 downto 0);
    p_Val2_14_mux_fu_2555_p3 <= 
        ap_const_lv18_1FFFF when (brmerge_i_i4_fu_2541_p2(0) = '1') else 
        p_Val2_12_reg_3020;
    p_Val2_15_fu_2471_p1 <= grp_fu_2379_p2(18 - 1 downto 0);
    p_Val2_16_fu_960_p1 <= grp_fu_2613_p3(18 - 1 downto 0);
    p_Val2_17_fu_1028_p0 <= OP1_V_cast_fu_942_p1(2 - 1 downto 0);
    p_Val2_17_fu_1028_p1 <= x_div_V_fu_930_p2;
    p_Val2_17_fu_1028_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_17_fu_1028_p0) * signed(p_Val2_17_fu_1028_p1))), 19));
    p_Val2_17_mux_fu_2591_p3 <= 
        ap_const_lv18_1FFFF when (brmerge_i_i5_fu_2577_p2(0) = '1') else 
        p_Val2_15_reg_3039;
    p_Val2_18_fu_1042_p2 <= std_logic_vector(unsigned(p_Val2_17_fu_1028_p2) + unsigned(tmp_37_cast_fu_1034_p1));
    p_Val2_19_fu_1056_p2 <= std_logic_vector(unsigned(p_Val2_4_reg_263) + unsigned(tmp_88_fu_1038_p1));
    p_Val2_1_58_fu_472_p3 <= 
        ap_const_lv18_20000 when (underflow_fu_416_p2(0) = '1') else 
        p_Val2_1_fu_384_p1;
    p_Val2_1_fu_384_p1 <= p_Val2_s_fu_370_p2(18 - 1 downto 0);
    p_Val2_1_mux_fu_434_p3 <= 
        ap_const_lv18_1FFFF when (brmerge_i_i_fu_422_p2(0) = '1') else 
        p_Val2_1_fu_384_p1;
    p_Val2_20_fu_1167_p0 <= ap_reg_pp0_iter1_i_op_assign_reg_2682;
    p_Val2_20_fu_1167_p1 <= p_Val2_20_fu_1167_p10(15 - 1 downto 0);
    p_Val2_20_fu_1167_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(angulos_V_load_reg_2711),16));
    p_Val2_20_fu_1167_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_20_fu_1167_p0) * signed('0' &p_Val2_20_fu_1167_p1))), 16));
    p_Val2_21_mux_fu_1000_p3 <= 
        ap_const_lv18_1FFFF when (brmerge_i_i6_fu_988_p2(0) = '1') else 
        p_Val2_16_fu_960_p1;
    p_Val2_21_ph_fu_855_p3 <= 
        p_Val2_10_mux_fu_848_p3 when (sel_tmp19_reg_2653(0) = '1') else 
        sel_tmp17_reg_2648;
    p_Val2_22_fu_1180_p2 <= std_logic_vector(signed(tmp_43_cast_fu_1173_p1) - signed(tmp_44_cast_fu_1177_p1));
    p_Val2_23_fu_1194_p1 <= p_Val2_22_fu_1180_p2(18 - 1 downto 0);
    p_Val2_25_mux_fu_1100_p3 <= 
        ap_const_lv18_1FFFF when (brmerge_i_i7_fu_1088_p2(0) = '1') else 
        p_Val2_19_fu_1056_p2;
    p_Val2_26_fu_1443_p3 <= 
        tmp_98_fu_1432_p1 when (tmp_39_reg_2801(0) = '1') else 
        storemerge_fu_1436_p3;
    p_Val2_27_fu_1544_p2 <= std_logic_vector(unsigned(p_Val2_26_fu_1443_p3) + unsigned(tmp_52_fu_1540_p1));
    p_Val2_28_fu_1765_p3 <= 
        tmp_99_fu_1715_p1 when (sel_tmp13_reg_2855(0) = '1') else 
        sel_tmp9_fu_1758_p3;
    p_Val2_29_mux_fu_1236_p3 <= 
        ap_const_lv18_1FFFF when (brmerge_i_i8_fu_1224_p2(0) = '1') else 
        p_Val2_23_fu_1194_p1;
    p_Val2_2_60_fu_688_p3 <= 
        ap_const_lv18_20000 when (underflow_3_fu_670_p2(0) = '1') else 
        p_Val2_10_fu_646_p4;
    p_Val2_2_fu_446_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(OP2_V_1_cast_fu_442_p1));
    p_Val2_30_fu_2152_p4 <= p_Val2_29_reg_2966(33 downto 16);
    p_Val2_31_fu_2203_p2 <= std_logic_vector(unsigned(p_Val2_30_fu_2152_p4) + unsigned(tmp_64_fu_2199_p1));
    p_Val2_35_mux_fu_2053_p3 <= 
        ap_const_lv18_1FFFF when (brmerge_i_i9_fu_2029_p2(0) = '1') else 
        p_Val2_28_reg_2927;
    p_Val2_38_mux_fu_2329_p3 <= 
        ap_const_lv18_1FFFF when (brmerge_i_i10_fu_2311_p2(0) = '1') else 
        p_Val2_31_fu_2203_p2;
    p_Val2_3_59_fu_608_p3 <= 
        ap_const_lv18_20000 when (underflow_1_fu_492_p2(0) = '1') else 
        p_Val2_3_fu_460_p1;
    p_Val2_3_fu_460_p1 <= p_Val2_2_fu_446_p2(18 - 1 downto 0);
    p_Val2_3_mux_fu_510_p3 <= 
        ap_const_lv18_1FFFF when (brmerge_i_i1_fu_498_p2(0) = '1') else 
        p_Val2_3_fu_460_p1;
    p_Val2_4_62_fu_1008_p3 <= 
        ap_const_lv18_20000 when (underflow_4_fu_982_p2(0) = '1') else 
        p_Val2_16_fu_960_p1;
    p_Val2_5_70_fu_2598_p3 <= 
        ap_const_lv18_20000 when (underflow_10_reg_3051(0) = '1') else 
        p_Val2_15_reg_3039;
    p_Val2_5_fu_538_p2 <= std_logic_vector(unsigned(ap_const_lv20_19220) + unsigned(tmp_cast_fu_534_p1));
    p_Val2_6_63_fu_1108_p3 <= 
        ap_const_lv18_20000 when (underflow_5_fu_1082_p2(0) = '1') else 
        p_Val2_19_fu_1056_p2;
    p_Val2_6_fu_552_p4 <= p_Val2_5_fu_538_p2(18 downto 1);
    p_Val2_6_mux_fu_600_p3 <= 
        ap_const_lv18_1FFFF when (brmerge_i_i2_fu_582_p2(0) = '1') else 
        p_Val2_6_fu_552_p4;
    p_Val2_7_fu_616_p3 <= 
        ap_const_lv18_20000 when (underflow_2_fu_576_p2(0) = '1') else 
        p_Val2_6_fu_552_p4;
    p_Val2_8_64_fu_1244_p3 <= 
        ap_const_lv18_20000 when (underflow_6_fu_1218_p2(0) = '1') else 
        p_Val2_23_fu_1194_p1;
    p_Val2_9_66_fu_2060_p3 <= 
        ap_const_lv18_0 when (ap_reg_pp0_iter40_tmp_35_reg_2766(0) = '1') else 
        ap_const_lv18_20000;
    p_Val2_9_fu_632_p2 <= std_logic_vector(signed(ap_const_lv20_E6DE0) + signed(tmp_cast_fu_534_p1));
    p_Val2_s_69_fu_2562_p3 <= 
        ap_const_lv18_20000 when (underflow_9_reg_3032(0) = '1') else 
        p_Val2_12_reg_3020;
    p_Val2_s_fu_370_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(OP2_V_cast_fu_366_p1));
    p_not38_i2_fu_2445_p2 <= "0" when (tmp_11_fu_2405_p4 = ap_const_lv16_FFFF) else "1";
    p_not38_i3_fu_2523_p2 <= "0" when (tmp_17_fu_2483_p4 = ap_const_lv16_FFFF) else "1";
    p_not_i4_fu_2415_p2 <= "0" when (tmp_11_fu_2405_p4 = ap_const_lv16_0) else "1";
    p_not_i5_fu_2493_p2 <= "0" when (tmp_17_fu_2483_p4 = ap_const_lv16_0) else "1";
    p_not_i9_fu_2265_p2 <= (deleted_zeros_1_fu_2236_p3 xor ap_const_lv1_1);
    p_shl_cast_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_908_p3),7));
    p_shl_fu_908_p3 <= (ap_phi_mux_sh_assign_phi_fu_336_p4 & ap_const_lv1_0);
        pos1_cast_fu_1597_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos1_fu_1592_p2),32));

    pos1_fu_1592_p2 <= std_logic_vector(unsigned(ap_const_lv12_2) + unsigned(F2_reg_2774));
        pos2_cast_fu_1606_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos2_fu_1601_p2),32));

    pos2_fu_1601_p2 <= std_logic_vector(unsigned(ap_const_lv12_3) + unsigned(F2_reg_2774));
    pos_fu_867_p2 <= std_logic_vector(unsigned(ap_phi_mux_sh_assign_phi_fu_336_p4) + unsigned(ap_const_lv5_1));
    qb_assign_1_fu_1534_p2 <= (r_i_i_fu_1528_p2 and qb_fu_1466_p3);
    qb_assign_3_fu_2193_p2 <= (r_i_i1_fu_2187_p2 and qbit_fu_2161_p3);
    qb_fu_1466_p3 <= 
        isneg_5_reg_2742 when (tmp_46_reg_2806(0) = '1') else 
        tmp_100_fu_1459_p3;
    qbit_fu_2161_p3 <= p_Val2_29_reg_2966(15 downto 15);
    r_1_fu_2168_p2 <= "0" when (tmp_118_reg_2982 = ap_const_lv15_0) else "1";
    r_V_fu_1806_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & tmp_58_reg_2905(31-1 downto 0)))));
    r_fu_1510_p2 <= (tmp_51_fu_1504_p2 and tmp_48_fu_1472_p2);
    r_i_i1_fu_2187_p2 <= (tmp_120_fu_2180_p3 or r_1_fu_2168_p2);
    r_i_i_fu_1528_p2 <= (tmp_107_fu_1524_p1 or r_fu_1510_p2);
    rev1_fu_1796_p2 <= (tmp_114_reg_2894 xor ap_const_lv1_1);
    rev_fu_1624_p2 <= (tmp_112_fu_1616_p3 xor ap_const_lv1_1);
    sel_tmp10_fu_708_p3 <= 
        p_Val2_7_fu_616_p3 when (sel_tmp7_fu_702_p2(0) = '1') else 
        p_Val2_2_60_fu_688_p3;
    sel_tmp11_fu_716_p2 <= (tmp_fu_352_p3 xor ap_const_lv1_1);
    sel_tmp12_fu_722_p2 <= "1" when (y_V = ap_const_lv18_0) else "0";
    sel_tmp13_fu_1558_p2 <= (tmp_40_fu_1418_p2 and icmp_reg_2821);
    sel_tmp14_fu_728_p2 <= (sel_tmp12_fu_722_p2 or sel_tmp11_fu_716_p2);
    sel_tmp15_fu_734_p3 <= 
        z_V when (sel_tmp14_fu_728_p2(0) = '1') else 
        sel_tmp10_fu_708_p3;
    sel_tmp16_fu_742_p2 <= (sel_tmp6_fu_696_p2 and brmerge9_fu_594_p2);
    sel_tmp17_fu_748_p3 <= 
        p_Val2_6_mux_fu_600_p3 when (sel_tmp16_fu_742_p2(0) = '1') else 
        sel_tmp15_fu_734_p3;
    sel_tmp18_fu_756_p2 <= (tmp_1_fu_360_p2 xor ap_const_lv1_1);
    sel_tmp19_fu_774_p2 <= (tmp6_fu_768_p2 and tmp5_fu_762_p2);
    sel_tmp1_fu_1725_p2 <= (tmp_38_reg_2831 xor ap_const_lv1_1);
    sel_tmp20_fu_1695_p2 <= (tmp_67_not_fu_1689_p2 or tmp_112_fu_1616_p3);
    sel_tmp21_fu_1701_p2 <= (tmp_60_fu_1678_p2 and sel_tmp20_fu_1695_p2);
    sel_tmp22_fu_1853_p3 <= 
        Range1_all_ones_1_reg_2887 when (sel_tmp21_reg_2921(0) = '1') else 
        rev_reg_2880;
    sel_tmp23_fu_1866_p3 <= 
        Range1_all_zeros_fu_1838_p2 when (sel_tmp21_reg_2921(0) = '1') else 
        p_119_i_fu_1849_p2;
    sel_tmp23_not_fu_1889_p2 <= (sel_tmp8_fu_1753_p2 xor ap_const_lv1_1);
    sel_tmp24_fu_1960_p2 <= (ap_reg_pp0_iter40_tmp_54_reg_2873 xor ap_const_lv1_1);
    sel_tmp25_fu_1975_p2 <= (tmp35_fu_1970_p2 and ap_reg_pp0_iter40_isneg_5_reg_2742);
    sel_tmp26_fu_1980_p2 <= (ap_reg_pp0_iter40_tmp_54_reg_2873 and ap_reg_pp0_iter40_isneg_5_reg_2742);
    sel_tmp27_fu_2072_p3 <= 
        p_Val2_9_66_fu_2060_p3 when (tmp_63_fu_2067_p2(0) = '1') else 
        p_Val2_28_reg_2927;
    sel_tmp28_fu_2083_p3 <= 
        sel_tmp27_fu_2072_p3 when (sel_tmp57_demorgan_fu_2079_p2(0) = '1') else 
        p_Val2_28_reg_2927;
    sel_tmp29_fu_2090_p2 <= (ap_reg_pp0_iter40_tmp_35_reg_2766 xor ap_const_lv1_1);
    sel_tmp2_fu_1730_p2 <= (sel_tmp1_fu_1725_p2 and ap_reg_pp0_iter39_QUAN_INC_reg_2783);
    sel_tmp30_fu_2101_p2 <= (tmp37_fu_2095_p2 and ap_reg_pp0_iter40_icmp1_reg_2862);
    sel_tmp3_fu_1735_p2 <= (tmp_106_reg_2837 xor ap_const_lv1_1);
    sel_tmp4_fu_1740_p2 <= (sel_tmp3_fu_1735_p2 and sel_tmp2_fu_1730_p2);
    sel_tmp57_demorgan_fu_2079_p2 <= (ap_reg_pp0_iter40_tmp_35_reg_2766 or ap_reg_pp0_iter40_icmp1_reg_2862);
    sel_tmp5_fu_1746_p3 <= 
        p_Val2_27_reg_2843 when (sel_tmp4_fu_1740_p2(0) = '1') else 
        sel_tmp_fu_1719_p3;
    sel_tmp6_fu_696_p2 <= (tmp_fu_352_p3 and tmp_1_fu_360_p2);
    sel_tmp7_fu_702_p2 <= (underflow_2_fu_576_p2 and sel_tmp6_fu_696_p2);
    sel_tmp8_fu_1753_p2 <= (tmp_106_reg_2837 and sel_tmp2_fu_1730_p2);
    sel_tmp9_fu_1758_p3 <= 
        p_Val2_27_reg_2843 when (sel_tmp8_fu_1753_p2(0) = '1') else 
        sel_tmp5_fu_1746_p3;
    sel_tmp_fu_1719_p3 <= 
        ap_reg_pp0_iter39_tmp_97_reg_2795 when (tmp_38_reg_2831(0) = '1') else 
        ap_const_lv18_0;
        sh_amt_cast_fu_1410_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_2789),32));

    sh_amt_fu_1349_p3 <= 
        tmp_36_fu_1337_p2 when (QUAN_INC_fu_1331_p2(0) = '1') else 
        tmp_37_fu_1343_p2;
    sh_assign_cast1_fu_926_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_reg_332),18));
    signbit_1_fu_638_p3 <= p_Val2_9_fu_632_p2(19 downto 19);
    signbit_fu_544_p3 <= p_Val2_5_fu_538_p2(19 downto 19);
    signo_cast_fu_881_p3 <= 
        ap_const_lv2_1 when (tmp_84_fu_873_p3(0) = '1') else 
        ap_const_lv2_3;
    storemerge_fu_1436_p3 <= 
        ap_const_lv18_3FFFF when (isneg_5_reg_2742(0) = '1') else 
        ap_const_lv18_0;
    this_assign_6_4_fu_2106_p3 <= 
        p_Val2_35_mux_fu_2053_p3 when (sel_tmp30_fu_2101_p2(0) = '1') else 
        sel_tmp28_fu_2083_p3;
        tmp135_cast_fu_1141_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp31_fu_1135_p2),7));

    tmp136_demorgan_fu_1772_p2 <= (tmp_108_reg_2849 or sel_tmp13_reg_2855);
    tmp137_cast_cast_fu_1563_p3 <= 
        ap_const_lv12_2 when (QUAN_INC_reg_2783(0) = '1') else 
        ap_const_lv12_1;
    tmp143_demorgan_fu_2294_p2 <= (p_38_i_fu_2260_p2 or brmerge40_demorgan_i_fu_2288_p2);
    tmp31_fu_1135_p2 <= (tmp_46_cast_cast_fu_1131_p1 xor ap_const_lv4_4);
    tmp32_fu_1776_p2 <= (tmp136_demorgan_fu_1772_p2 xor ap_const_lv1_1);
    tmp33_fu_1643_p2 <= (rev_fu_1624_p2 and lD_fu_1639_p1);
    tmp34_fu_1895_p2 <= (sel_tmp23_not_fu_1889_p2 or sel_tmp13_reg_2855);
    tmp35_fu_1970_p2 <= (sel_tmp24_fu_1960_p2 and newsignbit_7_reg_2939);
    tmp36_fu_2041_p2 <= (overflow_2_fu_2006_p2 or neg_src_0_i_not_fu_2035_p2);
    tmp37_fu_2095_p2 <= (sel_tmp29_fu_2090_p2 and brmerge5_fu_2047_p2);
    tmp38_fu_2300_p2 <= (tmp143_demorgan_fu_2294_p2 xor ap_const_lv1_1);
    tmp39_fu_2317_p2 <= (tmp_67_fu_2277_p2 or brmerge40_demorgan_i_fu_2288_p2);
    tmp5_fu_762_p2 <= (tmp_42_fu_396_p3 and sel_tmp18_fu_756_p2);
    tmp6_fu_768_p2 <= (tmp_fu_352_p3 and brmerge6_fu_682_p2);
    tmp_100_fu_1459_p3 <= man_V_reg_2756(to_integer(unsigned(tmp_71_cast_fu_1455_p1)) downto to_integer(unsigned(tmp_71_cast_fu_1455_p1))) when (to_integer(unsigned(tmp_71_cast_fu_1455_p1))>= 0 and to_integer(unsigned(tmp_71_cast_fu_1455_p1))<=53) else "-";
    tmp_101_fu_1373_p1 <= F2_fu_1325_p2(6 - 1 downto 0);
    tmp_102_fu_1482_p3 <= 
        ap_const_lv6_0 when (tmp_50_reg_2816(0) = '1') else 
        tmp_75_cast_op_fu_1477_p2;
    tmp_103_fu_1489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_102_fu_1482_p3),54));
    tmp_104_fu_1493_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & tmp_103_fu_1489_p1(31-1 downto 0)))));
    tmp_107_fu_1524_p1 <= p_Val2_26_fu_1443_p3(1 - 1 downto 0);
    tmp_109_fu_1389_p4 <= F2_fu_1325_p2(11 downto 4);
    tmp_110_fu_1576_p4 <= tmp_53_fu_1570_p2(11 downto 1);
    tmp_112_fu_1616_p3 <= pos1_fu_1592_p2(11 downto 11);
    tmp_115_fu_1923_p3 <= pos1_reg_2868(11 downto 11);
    tmp_118_fu_2128_p1 <= p_Val2_29_fu_2624_p2(15 - 1 downto 0);
    tmp_119_fu_2173_p3 <= p_Val2_29_reg_2966(33 downto 33);
    tmp_11_fu_2405_p4 <= grp_fu_2365_p2(33 downto 18);
    tmp_120_fu_2180_p3 <= p_Val2_29_reg_2966(16 downto 16);
    tmp_122_fu_2229_p3 <= p_Val2_29_reg_2966(34 downto 34);
    tmp_13_fu_2427_p2 <= (isneg_6_fu_2385_p3 xor ap_const_lv1_1);
    tmp_17_fu_2483_p4 <= grp_fu_2379_p2(33 downto 18);
    tmp_18_fu_2505_p2 <= (isneg_7_fu_2463_p3 xor ap_const_lv1_1);
    tmp_1_fu_360_p2 <= "1" when (signed(y_V) > signed(ap_const_lv18_0)) else "0";
    tmp_20_fu_889_p2 <= "0" when (ap_phi_mux_p_Val2_4_phi_fu_266_p4 = ap_const_lv18_0) else "1";
    tmp_21_fu_970_p2 <= (isneg_2_fu_953_p3 xor ap_const_lv1_1);
    tmp_22_fu_976_p2 <= (newsignbit_4_fu_963_p3 xor ap_const_lv1_1);
    tmp_23_fu_1070_p2 <= (isneg_3_fu_1048_p3 xor ap_const_lv1_1);
    tmp_24_fu_1076_p2 <= (newsignbit_5_fu_1062_p3 xor ap_const_lv1_1);
    tmp_25_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_sh_assign_phi_fu_336_p4),64));
    tmp_26_fu_1206_p2 <= (isneg_4_fu_1186_p3 xor ap_const_lv1_1);
    tmp_27_fu_1212_p2 <= (newsignbit_6_fu_1198_p3 xor ap_const_lv1_1);
    tmp_28_fu_1124_p3 <= (i_op_assign_reg_2682 & ap_const_lv1_0);
    tmp_29_fu_920_p2 <= std_logic_vector(unsigned(ap_const_lv7_0) - unsigned(p_shl_cast_fu_916_p1));
    tmp_2_fu_410_p2 <= (newsignbit_fu_388_p3 xor ap_const_lv1_1);
    tmp_30_fu_1145_p2 <= (tmp_29_reg_2694 xor tmp135_cast_fu_1141_p1);
    tmp_33_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_1275_p4),12));
    tmp_34_fu_1293_p3 <= (ap_const_lv1_1 & tmp_96_fu_1289_p1);
    tmp_35_fu_1319_p2 <= "1" when (tmp_94_fu_1263_p1 = ap_const_lv63_0) else "0";
    tmp_36_fu_1337_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_fu_1325_p2));
        tmp_37_cast_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_reg_263),19));

    tmp_37_fu_1343_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_fu_1325_p2));
    tmp_38_fu_1413_p2 <= "1" when (F2_reg_2774 = ap_const_lv12_10) else "0";
    tmp_39_fu_1361_p2 <= "1" when (unsigned(sh_amt_fu_1349_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_3_fu_480_p2 <= (isneg_1_fu_452_p3 xor ap_const_lv1_1);
    tmp_40_fu_1418_p2 <= "1" when (unsigned(sh_amt_reg_2789) < unsigned(ap_const_lv12_12)) else "0";
    tmp_41_fu_1423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_cast_fu_1410_p1),54));
    tmp_42_fu_396_p3 <= y_V(17 downto 17);
        tmp_43_cast_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_p_Val2_21_phi_fu_256_p4),19));

    tmp_43_fu_1427_p2 <= std_logic_vector(shift_right(signed(man_V_reg_2756),to_integer(unsigned('0' & tmp_41_fu_1423_p1(31-1 downto 0)))));
        tmp_44_cast_fu_1177_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_20_reg_2721),19));

        tmp_44_fu_1707_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter39_tmp_97_reg_2795),32));

    tmp_45_fu_1710_p2 <= std_logic_vector(shift_left(unsigned(tmp_44_fu_1707_p1),to_integer(unsigned('0' & sh_amt_cast_reg_2826(31-1 downto 0)))));
        tmp_46_cast_cast_fu_1131_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_28_fu_1124_p3),4));

    tmp_46_fu_1367_p2 <= "1" when (signed(tmp_36_fu_1337_p2) > signed(ap_const_lv12_36)) else "0";
    tmp_47_fu_1450_p2 <= std_logic_vector(signed(ap_const_lv12_FEF) + signed(F2_reg_2774));
    tmp_48_fu_1472_p2 <= "1" when (signed(F2_reg_2774) > signed(ap_const_lv12_11)) else "0";
        tmp_49_cast_fu_1150_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_30_fu_1145_p2),32));

    tmp_49_fu_1377_p2 <= std_logic_vector(signed(ap_const_lv12_FEE) + signed(F2_fu_1325_p2));
    tmp_4_fu_486_p2 <= (newsignbit_1_fu_464_p3 xor ap_const_lv1_1);
    tmp_50_fu_1383_p2 <= "1" when (signed(tmp_49_fu_1377_p2) > signed(ap_const_lv12_35)) else "0";
    tmp_51_fu_1504_p2 <= "0" when (p_Result_s_fu_1499_p2 = ap_const_lv54_0) else "1";
    tmp_52_fu_1540_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_1_fu_1534_p2),18));
    tmp_53_fu_1570_p2 <= std_logic_vector(unsigned(tmp137_cast_cast_fu_1563_p3) + unsigned(exp_V_fu_1405_p2));
    tmp_54_fu_1610_p2 <= "1" when (signed(pos1_fu_1592_p2) < signed(ap_const_lv12_36)) else "0";
    tmp_55_fu_1630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos1_cast_fu_1597_p1),54));
    tmp_56_fu_1634_p2 <= std_logic_vector(shift_right(signed(man_V_reg_2756),to_integer(unsigned('0' & tmp_55_fu_1630_p1(31-1 downto 0)))));
    tmp_57_fu_1663_p2 <= "1" when (signed(pos2_fu_1601_p2) < signed(ap_const_lv12_36)) else "0";
    tmp_58_fu_1669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos2_cast_fu_1606_p1),54));
    tmp_59_fu_1833_p2 <= "1" when (Range2_V_1_reg_2910 = ap_const_lv54_0) else "0";
    tmp_60_fu_1678_p2 <= "1" when (pos2_fu_1601_p2 = ap_const_lv12_36) else "0";
    tmp_61_fu_1954_p2 <= (ap_const_lv1_1 xor Range1_all_ones_2_i_65_fu_1950_p2);
    tmp_62_fu_2001_p2 <= (ap_reg_pp0_iter40_isneg_5_reg_2742 xor ap_const_lv1_1);
    tmp_63_fu_2067_p2 <= (underflow_7_fu_2023_p2 or ap_reg_pp0_iter40_tmp_35_reg_2766);
    tmp_64_fu_2199_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_3_fu_2193_p2),18));
    tmp_65_fu_2217_p2 <= (newsignbit_8_fu_2209_p3 xor ap_const_lv1_1);
    tmp_66_fu_2242_p2 <= (tmp_122_fu_2229_p3 xor ap_const_lv1_1);
    tmp_67_fu_2277_p2 <= (signbit_2_reg_2975 xor ap_const_lv1_1);
    tmp_67_not_fu_1689_p2 <= (tmp_57_fu_1663_p2 xor ap_const_lv1_1);
        tmp_6_fu_2361_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_reg_320),34));

        tmp_71_cast_fu_1455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_47_fu_1450_p2),32));

    tmp_75_cast_op_fu_1477_p2 <= std_logic_vector(unsigned(ap_const_lv6_7) - unsigned(tmp_101_reg_2811));
    tmp_7_fu_404_p2 <= (isneg_fu_376_p3 xor ap_const_lv1_1);
    tmp_84_fu_873_p3 <= ap_phi_mux_p_Val2_4_phi_fu_266_p4(17 downto 17);
    tmp_88_fu_1038_p1 <= p_Val2_17_fu_1028_p2(18 - 1 downto 0);
    tmp_8_fu_664_p2 <= (newsignbit_3_fu_656_p3 xor ap_const_lv1_1);
    tmp_94_fu_1263_p1 <= ireg_V_fu_1260_p1(63 - 1 downto 0);
    tmp_96_fu_1289_p1 <= ireg_V_fu_1260_p1(52 - 1 downto 0);
    tmp_97_fu_1357_p1 <= man_V_fu_1311_p3(18 - 1 downto 0);
    tmp_98_fu_1432_p1 <= tmp_43_fu_1427_p2(18 - 1 downto 0);
    tmp_99_fu_1715_p1 <= tmp_45_fu_1710_p2(18 - 1 downto 0);
    tmp_9_fu_570_p2 <= (newsignbit_2_fu_562_p3 xor ap_const_lv1_1);
        tmp_cast_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_526_p3),20));

    tmp_fu_352_p3 <= x_V(17 downto 17);
    tmp_s_fu_526_p3 <= (z_V & ap_const_lv1_0);
    underflow_10_fu_2535_p2 <= (isneg_7_fu_2463_p3 and brmerge39_i3_fu_2529_p2);
    underflow_10_not_fu_2581_p2 <= (underflow_10_reg_3051 xor ap_const_lv1_1);
    underflow_1_fu_492_p2 <= (tmp_4_fu_486_p2 and isneg_1_fu_452_p3);
    underflow_2_fu_576_p2 <= (tmp_9_fu_570_p2 and signbit_fu_544_p3);
    underflow_2_not_fu_504_p2 <= (tmp_3_fu_480_p2 or newsignbit_1_fu_464_p3);
    underflow_3_fu_670_p2 <= (tmp_8_fu_664_p2 and signbit_1_fu_638_p3);
    underflow_4_fu_982_p2 <= (tmp_22_fu_976_p2 and isneg_2_fu_953_p3);
    underflow_4_not_fu_994_p2 <= (tmp_21_fu_970_p2 or newsignbit_4_fu_963_p3);
    underflow_5_fu_1082_p2 <= (tmp_24_fu_1076_p2 and isneg_3_fu_1048_p3);
    underflow_5_not_fu_1094_p2 <= (tmp_23_fu_1070_p2 or newsignbit_5_fu_1062_p3);
    underflow_6_fu_1218_p2 <= (tmp_27_fu_1212_p2 and isneg_4_fu_1186_p3);
    underflow_6_not_fu_1230_p2 <= (tmp_26_fu_1206_p2 or newsignbit_6_fu_1198_p3);
    underflow_7_fu_2023_p2 <= (neg_src_0_i_fu_1984_p3 and brmerge121_i_fu_2017_p2);
    underflow_8_fu_2306_p2 <= (tmp38_fu_2300_p2 and signbit_2_reg_2975);
    underflow_8_not_fu_2323_p2 <= (tmp39_fu_2317_p2 or p_38_i_fu_2260_p2);
    underflow_9_fu_2457_p2 <= (isneg_6_fu_2385_p3 and brmerge39_i2_fu_2451_p2);
    underflow_9_not_fu_2545_p2 <= (underflow_9_reg_3032 xor ap_const_lv1_1);
    underflow_fu_416_p2 <= (tmp_2_fu_410_p2 and isneg_fu_376_p3);
    underflow_not_fu_428_p2 <= (tmp_7_fu_404_p2 or newsignbit_fu_388_p3);
    x_ant_V_1_fu_1016_p3 <= 
        p_Val2_21_mux_fu_1000_p3 when (underflow_4_not_fu_994_p2(0) = '1') else 
        p_Val2_4_62_fu_1008_p3;
    x_ant_V_2_fu_812_p3 <= 
        y_V when (sel_tmp7_fu_702_p2(0) = '1') else 
        x_ant_V_fu_624_p3;
    x_ant_V_3_fu_820_p3 <= 
        x_V when (sel_tmp14_fu_728_p2(0) = '1') else 
        x_ant_V_2_fu_812_p3;
    x_ant_V_4_fu_828_p3 <= 
        y_V when (sel_tmp16_fu_742_p2(0) = '1') else 
        x_ant_V_3_fu_820_p3;
    x_ant_V_5_fu_836_p3 <= 
        x_ant_V_fu_624_p3 when (sel_tmp19_fu_774_p2(0) = '1') else 
        x_ant_V_4_fu_828_p3;
    x_ant_V_fu_624_p3 <= 
        p_Val2_3_mux_fu_510_p3 when (underflow_2_not_fu_504_p2(0) = '1') else 
        p_Val2_3_59_fu_608_p3;
    x_div_V_fu_930_p2 <= std_logic_vector(shift_right(signed(ap_phi_mux_p_Val2_7_61_phi_fu_276_p4),to_integer(unsigned('0' & sh_assign_cast1_fu_926_p1(18-1 downto 0)))));
    x_out_V <= 
        p_Val2_14_mux_fu_2555_p3 when (brmerge7_fu_2550_p2(0) = '1') else 
        p_Val2_s_69_fu_2562_p3;

    x_out_V_ap_vld_assign_proc : process(ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            x_out_V_ap_vld <= ap_const_logic_1;
        else 
            x_out_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    y_ant_V_1_fu_1116_p3 <= 
        p_Val2_25_mux_fu_1100_p3 when (underflow_5_not_fu_1094_p2(0) = '1') else 
        p_Val2_6_63_fu_1108_p3;
    y_ant_V_2_fu_780_p3 <= 
        y_ant_V_fu_518_p3 when (sel_tmp7_fu_702_p2(0) = '1') else 
        x_V;
    y_ant_V_3_fu_788_p3 <= 
        y_V when (sel_tmp14_fu_728_p2(0) = '1') else 
        y_ant_V_2_fu_780_p3;
    y_ant_V_4_fu_796_p3 <= 
        y_ant_V_fu_518_p3 when (sel_tmp16_fu_742_p2(0) = '1') else 
        y_ant_V_3_fu_788_p3;
    y_ant_V_5_fu_804_p3 <= 
        x_V when (sel_tmp19_fu_774_p2(0) = '1') else 
        y_ant_V_4_fu_796_p3;
    y_ant_V_fu_518_p3 <= 
        p_Val2_1_mux_fu_434_p3 when (underflow_not_fu_428_p2(0) = '1') else 
        p_Val2_1_58_fu_472_p3;
    y_div_V_fu_936_p2 <= std_logic_vector(shift_right(signed(p_Val2_4_reg_263),to_integer(unsigned('0' & sh_assign_cast1_fu_926_p1(18-1 downto 0)))));
    y_out_V <= 
        p_Val2_17_mux_fu_2591_p3 when (brmerge8_fu_2586_p2(0) = '1') else 
        p_Val2_5_70_fu_2598_p3;

    y_out_V_ap_vld_assign_proc : process(ap_CS_fsm_state85)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            y_out_V_ap_vld <= ap_const_logic_1;
        else 
            y_out_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    z_next_V_fu_1252_p3 <= 
        p_Val2_29_mux_fu_1236_p3 when (underflow_6_not_fu_1230_p2(0) = '1') else 
        p_Val2_8_64_fu_1244_p3;
    z_out_V <= p_s_reg_307;

    z_out_V_ap_vld_assign_proc : process(ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            z_out_V_ap_vld <= ap_const_logic_1;
        else 
            z_out_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
