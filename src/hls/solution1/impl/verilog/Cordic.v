// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Cordic,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=14.541396,HLS_SYN_LAT=103,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=4,HLS_SYN_FF=4436,HLS_SYN_LUT=8179}" *)

module Cordic (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_V,
        y_V,
        z_V,
        x_out_V,
        x_out_V_ap_vld,
        y_out_V,
        y_out_V_ap_vld,
        z_out_V,
        z_out_V_ap_vld
);

parameter    ap_ST_fsm_state1 = 42'd1;
parameter    ap_ST_fsm_state2 = 42'd2;
parameter    ap_ST_fsm_pp0_stage0 = 42'd4;
parameter    ap_ST_fsm_state47 = 42'd8;
parameter    ap_ST_fsm_state48 = 42'd16;
parameter    ap_ST_fsm_state49 = 42'd32;
parameter    ap_ST_fsm_state50 = 42'd64;
parameter    ap_ST_fsm_state51 = 42'd128;
parameter    ap_ST_fsm_state52 = 42'd256;
parameter    ap_ST_fsm_state53 = 42'd512;
parameter    ap_ST_fsm_state54 = 42'd1024;
parameter    ap_ST_fsm_state55 = 42'd2048;
parameter    ap_ST_fsm_state56 = 42'd4096;
parameter    ap_ST_fsm_state57 = 42'd8192;
parameter    ap_ST_fsm_state58 = 42'd16384;
parameter    ap_ST_fsm_state59 = 42'd32768;
parameter    ap_ST_fsm_state60 = 42'd65536;
parameter    ap_ST_fsm_state61 = 42'd131072;
parameter    ap_ST_fsm_state62 = 42'd262144;
parameter    ap_ST_fsm_state63 = 42'd524288;
parameter    ap_ST_fsm_state64 = 42'd1048576;
parameter    ap_ST_fsm_state65 = 42'd2097152;
parameter    ap_ST_fsm_state66 = 42'd4194304;
parameter    ap_ST_fsm_state67 = 42'd8388608;
parameter    ap_ST_fsm_state68 = 42'd16777216;
parameter    ap_ST_fsm_state69 = 42'd33554432;
parameter    ap_ST_fsm_state70 = 42'd67108864;
parameter    ap_ST_fsm_state71 = 42'd134217728;
parameter    ap_ST_fsm_state72 = 42'd268435456;
parameter    ap_ST_fsm_state73 = 42'd536870912;
parameter    ap_ST_fsm_state74 = 42'd1073741824;
parameter    ap_ST_fsm_state75 = 42'd2147483648;
parameter    ap_ST_fsm_state76 = 42'd4294967296;
parameter    ap_ST_fsm_state77 = 42'd8589934592;
parameter    ap_ST_fsm_state78 = 42'd17179869184;
parameter    ap_ST_fsm_state79 = 42'd34359738368;
parameter    ap_ST_fsm_state80 = 42'd68719476736;
parameter    ap_ST_fsm_state81 = 42'd137438953472;
parameter    ap_ST_fsm_state82 = 42'd274877906944;
parameter    ap_ST_fsm_state83 = 42'd549755813888;
parameter    ap_ST_fsm_state84 = 42'd1099511627776;
parameter    ap_ST_fsm_state85 = 42'd2199023255552;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [17:0] x_V;
input  [17:0] y_V;
input  [17:0] z_V;
output  [17:0] x_out_V;
output   x_out_V_ap_vld;
output  [17:0] y_out_V;
output   y_out_V_ap_vld;
output  [17:0] z_out_V;
output   z_out_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg x_out_V_ap_vld;
reg y_out_V_ap_vld;
reg z_out_V_ap_vld;

(* fsm_encoding = "none" *) reg   [41:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] angulos_V_address0;
reg    angulos_V_ce0;
wire   [14:0] angulos_V_q0;
reg   [17:0] p_Val2_21_reg_253;
reg   [17:0] p_Val2_4_reg_263;
reg   [17:0] p_Val2_7_61_reg_273;
reg   [17:0] p_Val2_8_reg_283;
reg   [17:0] p_Val2_11_reg_295;
reg   [17:0] p_s_reg_307;
reg   [17:0] p_1_reg_320;
reg   [4:0] sh_assign_reg_332;
wire   [0:0] signbit_1_fu_638_p3;
reg   [0:0] signbit_1_reg_2633;
wire   [17:0] p_Val2_10_fu_646_p4;
reg   [17:0] p_Val2_10_reg_2638;
wire   [0:0] newsignbit_3_fu_656_p3;
reg   [0:0] newsignbit_3_reg_2643;
wire   [17:0] sel_tmp17_fu_748_p3;
reg   [17:0] sel_tmp17_reg_2648;
wire   [0:0] sel_tmp19_fu_774_p2;
reg   [0:0] sel_tmp19_reg_2653;
wire   [17:0] y_ant_V_5_fu_804_p3;
reg   [17:0] y_ant_V_5_reg_2658;
wire   [17:0] x_ant_V_5_fu_836_p3;
reg   [17:0] x_ant_V_5_reg_2663;
wire   [17:0] p_Val2_21_ph_fu_855_p3;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond_fu_861_p2;
reg   [0:0] exitcond_reg_2673;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
wire    ap_block_state23_pp0_stage0_iter20;
wire    ap_block_state24_pp0_stage0_iter21;
wire    ap_block_state25_pp0_stage0_iter22;
wire    ap_block_state26_pp0_stage0_iter23;
wire    ap_block_state27_pp0_stage0_iter24;
wire    ap_block_state28_pp0_stage0_iter25;
wire    ap_block_state29_pp0_stage0_iter26;
wire    ap_block_state30_pp0_stage0_iter27;
wire    ap_block_state31_pp0_stage0_iter28;
wire    ap_block_state32_pp0_stage0_iter29;
wire    ap_block_state33_pp0_stage0_iter30;
wire    ap_block_state34_pp0_stage0_iter31;
wire    ap_block_state35_pp0_stage0_iter32;
wire    ap_block_state36_pp0_stage0_iter33;
wire    ap_block_state37_pp0_stage0_iter34;
wire    ap_block_state38_pp0_stage0_iter35;
wire    ap_block_state39_pp0_stage0_iter36;
wire    ap_block_state40_pp0_stage0_iter37;
wire    ap_block_state41_pp0_stage0_iter38;
wire    ap_block_state42_pp0_stage0_iter39;
wire    ap_block_state43_pp0_stage0_iter40;
wire    ap_block_state44_pp0_stage0_iter41;
wire    ap_block_state45_pp0_stage0_iter42;
wire    ap_block_state46_pp0_stage0_iter43;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter2_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter3_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter4_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter5_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter6_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter7_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter8_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter9_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter10_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter11_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter12_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter13_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter14_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter15_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter16_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter17_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter18_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter19_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter20_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter21_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter22_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter23_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter24_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter25_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter26_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter27_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter28_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter29_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter30_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter31_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter32_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter33_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter34_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter35_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter36_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter37_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter38_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter39_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter40_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter41_exitcond_reg_2673;
reg   [0:0] ap_reg_pp0_iter42_exitcond_reg_2673;
wire   [4:0] pos_fu_867_p2;
reg   [4:0] pos_reg_2677;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] i_op_assign_fu_895_p3;
reg   [1:0] i_op_assign_reg_2682;
reg   [1:0] ap_reg_pp0_iter1_i_op_assign_reg_2682;
wire   [6:0] tmp_29_fu_920_p2;
reg   [6:0] tmp_29_reg_2694;
wire   [17:0] x_ant_V_1_fu_1016_p3;
reg   [17:0] x_ant_V_1_reg_2699;
reg    ap_enable_reg_pp0_iter1;
reg   [17:0] ap_reg_pp0_iter2_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter3_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter4_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter5_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter6_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter7_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter8_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter9_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter10_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter11_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter12_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter13_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter14_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter15_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter16_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter17_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter18_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter19_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter20_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter21_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter22_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter23_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter24_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter25_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter26_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter27_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter28_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter29_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter30_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter31_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter32_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter33_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter34_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter35_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter36_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter37_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter38_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter39_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter40_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter41_x_ant_V_1_reg_2699;
reg   [17:0] ap_reg_pp0_iter42_x_ant_V_1_reg_2699;
wire   [17:0] y_ant_V_1_fu_1116_p3;
reg   [17:0] y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter2_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter3_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter4_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter5_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter6_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter7_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter8_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter9_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter10_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter11_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter12_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter13_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter14_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter15_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter16_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter17_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter18_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter19_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter20_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter21_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter22_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter23_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter24_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter25_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter26_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter27_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter28_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter29_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter30_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter31_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter32_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter33_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter34_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter35_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter36_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter37_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter38_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter39_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter40_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter41_y_ant_V_1_reg_2705;
reg   [17:0] ap_reg_pp0_iter42_y_ant_V_1_reg_2705;
reg   [14:0] angulos_V_load_reg_2711;
wire   [15:0] p_Val2_20_fu_1167_p2;
reg   [15:0] p_Val2_20_reg_2721;
wire   [17:0] z_next_V_fu_1252_p3;
reg   [17:0] z_next_V_reg_2726;
reg    ap_enable_reg_pp0_iter3;
reg   [17:0] ap_reg_pp0_iter4_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter5_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter6_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter7_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter8_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter9_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter10_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter11_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter12_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter13_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter14_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter15_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter16_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter17_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter18_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter19_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter20_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter21_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter22_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter23_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter24_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter25_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter26_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter27_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter28_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter29_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter30_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter31_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter32_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter33_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter34_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter35_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter36_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter37_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter38_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter39_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter40_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter41_z_next_V_reg_2726;
reg   [17:0] ap_reg_pp0_iter42_z_next_V_reg_2726;
wire   [63:0] grp_fu_344_p1;
reg   [63:0] tmp_32_reg_2732;
wire   [63:0] grp_fu_347_p2;
reg   [63:0] raiz_reg_2737;
wire   [0:0] isneg_5_fu_1267_p3;
reg   [0:0] isneg_5_reg_2742;
reg   [0:0] ap_reg_pp0_iter39_isneg_5_reg_2742;
reg   [0:0] ap_reg_pp0_iter40_isneg_5_reg_2742;
wire   [11:0] tmp_33_fu_1285_p1;
reg   [11:0] tmp_33_reg_2751;
wire   [53:0] man_V_fu_1311_p3;
reg   [53:0] man_V_reg_2756;
wire   [0:0] tmp_35_fu_1319_p2;
reg   [0:0] tmp_35_reg_2766;
reg   [0:0] ap_reg_pp0_iter39_tmp_35_reg_2766;
reg   [0:0] ap_reg_pp0_iter40_tmp_35_reg_2766;
wire   [11:0] F2_fu_1325_p2;
reg   [11:0] F2_reg_2774;
wire   [0:0] QUAN_INC_fu_1331_p2;
reg   [0:0] QUAN_INC_reg_2783;
reg   [0:0] ap_reg_pp0_iter39_QUAN_INC_reg_2783;
wire   [11:0] sh_amt_fu_1349_p3;
reg   [11:0] sh_amt_reg_2789;
wire   [17:0] tmp_97_fu_1357_p1;
reg   [17:0] tmp_97_reg_2795;
reg   [17:0] ap_reg_pp0_iter39_tmp_97_reg_2795;
wire   [0:0] tmp_39_fu_1361_p2;
reg   [0:0] tmp_39_reg_2801;
wire   [0:0] tmp_46_fu_1367_p2;
reg   [0:0] tmp_46_reg_2806;
wire   [5:0] tmp_101_fu_1373_p1;
reg   [5:0] tmp_101_reg_2811;
wire   [0:0] tmp_50_fu_1383_p2;
reg   [0:0] tmp_50_reg_2816;
wire   [0:0] icmp_fu_1399_p2;
reg   [0:0] icmp_reg_2821;
wire  signed [31:0] sh_amt_cast_fu_1410_p1;
reg  signed [31:0] sh_amt_cast_reg_2826;
wire   [0:0] tmp_38_fu_1413_p2;
reg   [0:0] tmp_38_reg_2831;
reg   [0:0] tmp_106_reg_2837;
wire   [17:0] p_Val2_27_fu_1544_p2;
reg   [17:0] p_Val2_27_reg_2843;
reg   [0:0] tmp_108_reg_2849;
wire   [0:0] sel_tmp13_fu_1558_p2;
reg   [0:0] sel_tmp13_reg_2855;
wire   [0:0] icmp1_fu_1586_p2;
reg   [0:0] icmp1_reg_2862;
reg   [0:0] ap_reg_pp0_iter40_icmp1_reg_2862;
wire   [11:0] pos1_fu_1592_p2;
reg   [11:0] pos1_reg_2868;
wire   [0:0] tmp_54_fu_1610_p2;
reg   [0:0] tmp_54_reg_2873;
reg   [0:0] ap_reg_pp0_iter40_tmp_54_reg_2873;
wire   [0:0] rev_fu_1624_p2;
reg   [0:0] rev_reg_2880;
wire   [0:0] Range1_all_ones_1_fu_1649_p2;
reg   [0:0] Range1_all_ones_1_reg_2887;
reg   [0:0] tmp_114_reg_2894;
wire   [0:0] tmp_57_fu_1663_p2;
reg   [0:0] tmp_57_reg_2899;
wire   [53:0] tmp_58_fu_1669_p1;
reg   [53:0] tmp_58_reg_2905;
wire   [53:0] Range2_V_1_fu_1673_p2;
reg   [53:0] Range2_V_1_reg_2910;
wire   [0:0] Range1_all_zeros_1_fu_1684_p2;
reg   [0:0] Range1_all_zeros_1_reg_2916;
wire   [0:0] sel_tmp21_fu_1701_p2;
reg   [0:0] sel_tmp21_reg_2921;
wire   [17:0] p_Val2_28_fu_1765_p3;
reg   [17:0] p_Val2_28_reg_2927;
wire   [0:0] carry_1_i_fu_1782_p2;
reg   [0:0] carry_1_i_reg_2934;
reg   [0:0] newsignbit_7_reg_2939;
wire   [0:0] Range1_all_ones_2_i_fu_1858_p3;
reg   [0:0] Range1_all_ones_2_i_reg_2946;
wire   [0:0] deleted_ones_fu_1936_p3;
reg   [0:0] deleted_ones_reg_2951;
wire   [0:0] deleted_zeros_not_fu_1944_p2;
reg   [0:0] deleted_zeros_not_reg_2956;
wire   [17:0] this_assign_6_4_fu_2106_p3;
reg  signed [17:0] this_assign_6_4_reg_2961;
wire  signed [35:0] p_Val2_29_fu_2624_p2;
reg  signed [35:0] p_Val2_29_reg_2966;
reg   [0:0] signbit_2_reg_2975;
wire   [14:0] tmp_118_fu_2128_p1;
reg   [14:0] tmp_118_reg_2982;
wire   [0:0] Range1_all_ones_2_fu_2140_p2;
reg   [0:0] Range1_all_ones_2_reg_2987;
wire   [0:0] Range1_all_zeros_2_fu_2146_p2;
reg   [0:0] Range1_all_zeros_2_reg_2994;
wire   [17:0] K_m_t_V_fu_2345_p3;
reg    ap_enable_reg_pp0_iter43;
wire    ap_CS_fsm_state47;
wire  signed [33:0] tmp_6_fu_2361_p1;
wire   [17:0] p_Val2_12_fu_2393_p1;
reg   [17:0] p_Val2_12_reg_3020;
wire    ap_CS_fsm_state84;
wire   [0:0] overflow_fu_2433_p2;
reg   [0:0] overflow_reg_3026;
wire   [0:0] underflow_9_fu_2457_p2;
reg   [0:0] underflow_9_reg_3032;
wire   [17:0] p_Val2_15_fu_2471_p1;
reg   [17:0] p_Val2_15_reg_3039;
wire   [0:0] overflow_1_fu_2511_p2;
reg   [0:0] overflow_1_reg_3045;
wire   [0:0] underflow_10_fu_2535_p2;
reg   [0:0] underflow_10_reg_3051;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg   [17:0] ap_phi_mux_p_Val2_21_phi_fu_256_p4;
wire    ap_block_pp0_stage0;
reg   [17:0] ap_phi_mux_p_Val2_4_phi_fu_266_p4;
reg  signed [17:0] ap_phi_mux_p_Val2_7_61_phi_fu_276_p4;
reg  signed [17:0] ap_phi_mux_p_1_phi_fu_324_p4;
reg   [4:0] ap_phi_mux_sh_assign_phi_fu_336_p4;
wire   [63:0] tmp_25_fu_903_p1;
wire    ap_CS_fsm_state85;
wire   [31:0] grp_fu_344_p0;
wire  signed [18:0] OP2_V_cast_fu_366_p1;
wire   [18:0] p_Val2_s_fu_370_p2;
wire   [0:0] isneg_fu_376_p3;
wire   [0:0] newsignbit_fu_388_p3;
wire   [0:0] tmp_2_fu_410_p2;
wire   [0:0] tmp_7_fu_404_p2;
wire   [0:0] brmerge_i_i_fu_422_p2;
wire   [17:0] p_Val2_1_fu_384_p1;
wire  signed [18:0] OP2_V_1_cast_fu_442_p1;
wire   [18:0] p_Val2_2_fu_446_p2;
wire   [0:0] underflow_fu_416_p2;
wire   [0:0] isneg_1_fu_452_p3;
wire   [0:0] newsignbit_1_fu_464_p3;
wire   [0:0] tmp_4_fu_486_p2;
wire   [0:0] tmp_3_fu_480_p2;
wire   [0:0] brmerge_i_i1_fu_498_p2;
wire   [17:0] p_Val2_3_fu_460_p1;
wire   [0:0] underflow_not_fu_428_p2;
wire   [17:0] p_Val2_1_mux_fu_434_p3;
wire   [17:0] p_Val2_1_58_fu_472_p3;
wire   [18:0] tmp_s_fu_526_p3;
wire  signed [19:0] tmp_cast_fu_534_p1;
wire   [19:0] p_Val2_5_fu_538_p2;
wire   [0:0] newsignbit_2_fu_562_p3;
wire   [0:0] signbit_fu_544_p3;
wire   [0:0] tmp_9_fu_570_p2;
wire   [0:0] neg_src_3_not_fu_588_p2;
wire   [0:0] brmerge_i_i2_fu_582_p2;
wire   [17:0] p_Val2_6_fu_552_p4;
wire   [0:0] underflow_1_fu_492_p2;
wire   [0:0] underflow_2_fu_576_p2;
wire   [0:0] underflow_2_not_fu_504_p2;
wire   [17:0] p_Val2_3_mux_fu_510_p3;
wire   [17:0] p_Val2_3_59_fu_608_p3;
wire   [19:0] p_Val2_9_fu_632_p2;
wire   [0:0] tmp_8_fu_664_p2;
wire   [0:0] neg_src_5_not_fu_676_p2;
wire   [0:0] underflow_3_fu_670_p2;
wire   [0:0] tmp_fu_352_p3;
wire   [0:0] tmp_1_fu_360_p2;
wire   [0:0] sel_tmp6_fu_696_p2;
wire   [0:0] sel_tmp7_fu_702_p2;
wire   [17:0] p_Val2_7_fu_616_p3;
wire   [17:0] p_Val2_2_60_fu_688_p3;
wire   [0:0] sel_tmp12_fu_722_p2;
wire   [0:0] sel_tmp11_fu_716_p2;
wire   [0:0] sel_tmp14_fu_728_p2;
wire   [17:0] sel_tmp10_fu_708_p3;
wire   [0:0] brmerge9_fu_594_p2;
wire   [0:0] sel_tmp16_fu_742_p2;
wire   [17:0] p_Val2_6_mux_fu_600_p3;
wire   [17:0] sel_tmp15_fu_734_p3;
wire   [0:0] tmp_42_fu_396_p3;
wire   [0:0] sel_tmp18_fu_756_p2;
wire   [0:0] brmerge6_fu_682_p2;
wire   [0:0] tmp6_fu_768_p2;
wire   [0:0] tmp5_fu_762_p2;
wire   [17:0] y_ant_V_fu_518_p3;
wire   [17:0] y_ant_V_2_fu_780_p3;
wire   [17:0] y_ant_V_3_fu_788_p3;
wire   [17:0] y_ant_V_4_fu_796_p3;
wire   [17:0] x_ant_V_fu_624_p3;
wire   [17:0] x_ant_V_2_fu_812_p3;
wire   [17:0] x_ant_V_3_fu_820_p3;
wire   [17:0] x_ant_V_4_fu_828_p3;
wire   [0:0] brmerge_i_i3_fu_844_p2;
wire   [17:0] p_Val2_10_mux_fu_848_p3;
wire   [0:0] tmp_84_fu_873_p3;
wire   [0:0] tmp_20_fu_889_p2;
wire   [1:0] signo_cast_fu_881_p3;
wire   [5:0] p_shl_fu_908_p3;
wire   [6:0] p_shl_cast_fu_916_p1;
wire   [17:0] sh_assign_cast1_fu_926_p1;
wire  signed [17:0] y_div_V_fu_936_p2;
wire  signed [18:0] grp_fu_2613_p3;
wire   [0:0] isneg_2_fu_953_p3;
wire   [0:0] newsignbit_4_fu_963_p3;
wire   [0:0] tmp_22_fu_976_p2;
wire   [0:0] tmp_21_fu_970_p2;
wire   [0:0] brmerge_i_i6_fu_988_p2;
wire   [17:0] p_Val2_16_fu_960_p1;
wire   [0:0] underflow_4_fu_982_p2;
wire   [0:0] underflow_4_not_fu_994_p2;
wire   [17:0] p_Val2_21_mux_fu_1000_p3;
wire   [17:0] p_Val2_4_62_fu_1008_p3;
wire   [17:0] x_div_V_fu_930_p2;
wire  signed [1:0] p_Val2_17_fu_1028_p0;
wire  signed [18:0] OP1_V_cast_fu_942_p1;
wire  signed [17:0] p_Val2_17_fu_1028_p1;
wire   [18:0] p_Val2_17_fu_1028_p2;
wire  signed [18:0] tmp_37_cast_fu_1034_p1;
wire   [18:0] p_Val2_18_fu_1042_p2;
wire   [17:0] tmp_88_fu_1038_p1;
wire   [17:0] p_Val2_19_fu_1056_p2;
wire   [0:0] isneg_3_fu_1048_p3;
wire   [0:0] newsignbit_5_fu_1062_p3;
wire   [0:0] tmp_24_fu_1076_p2;
wire   [0:0] tmp_23_fu_1070_p2;
wire   [0:0] brmerge_i_i7_fu_1088_p2;
wire   [0:0] underflow_5_fu_1082_p2;
wire   [0:0] underflow_5_not_fu_1094_p2;
wire   [17:0] p_Val2_25_mux_fu_1100_p3;
wire   [17:0] p_Val2_6_63_fu_1108_p3;
wire   [2:0] tmp_28_fu_1124_p3;
wire  signed [3:0] tmp_46_cast_cast_fu_1131_p1;
wire   [3:0] tmp31_fu_1135_p2;
wire  signed [6:0] tmp135_cast_fu_1141_p1;
wire   [6:0] tmp_30_fu_1145_p2;
wire  signed [31:0] tmp_49_cast_fu_1150_p1;
wire  signed [1:0] p_Val2_20_fu_1167_p0;
wire   [14:0] p_Val2_20_fu_1167_p1;
wire  signed [18:0] tmp_43_cast_fu_1173_p1;
wire  signed [18:0] tmp_44_cast_fu_1177_p1;
wire   [18:0] p_Val2_22_fu_1180_p2;
wire   [0:0] isneg_4_fu_1186_p3;
wire   [0:0] newsignbit_6_fu_1198_p3;
wire   [0:0] tmp_27_fu_1212_p2;
wire   [0:0] tmp_26_fu_1206_p2;
wire   [0:0] brmerge_i_i8_fu_1224_p2;
wire   [17:0] p_Val2_23_fu_1194_p1;
wire   [0:0] underflow_6_fu_1218_p2;
wire   [0:0] underflow_6_not_fu_1230_p2;
wire   [17:0] p_Val2_29_mux_fu_1236_p3;
wire   [17:0] p_Val2_8_64_fu_1244_p3;
wire   [63:0] ireg_V_fu_1260_p1;
wire   [10:0] exp_tmp_V_fu_1275_p4;
wire   [51:0] tmp_96_fu_1289_p1;
wire   [52:0] tmp_34_fu_1293_p3;
wire   [53:0] p_Result_1_fu_1301_p1;
wire   [53:0] man_V_1_fu_1305_p2;
wire   [62:0] tmp_94_fu_1263_p1;
wire   [11:0] tmp_36_fu_1337_p2;
wire   [11:0] tmp_37_fu_1343_p2;
wire   [11:0] tmp_49_fu_1377_p2;
wire   [7:0] tmp_109_fu_1389_p4;
wire   [53:0] tmp_41_fu_1423_p1;
wire   [53:0] tmp_43_fu_1427_p2;
wire   [17:0] tmp_98_fu_1432_p1;
wire   [17:0] storemerge_fu_1436_p3;
wire   [11:0] tmp_47_fu_1450_p2;
wire  signed [31:0] tmp_71_cast_fu_1455_p1;
wire   [0:0] tmp_100_fu_1459_p3;
wire   [5:0] tmp_75_cast_op_fu_1477_p2;
wire   [5:0] tmp_102_fu_1482_p3;
wire   [53:0] tmp_103_fu_1489_p1;
wire   [53:0] tmp_104_fu_1493_p2;
wire   [53:0] p_Result_s_fu_1499_p2;
wire   [0:0] tmp_48_fu_1472_p2;
wire   [0:0] tmp_51_fu_1504_p2;
wire   [17:0] p_Val2_26_fu_1443_p3;
wire   [0:0] tmp_107_fu_1524_p1;
wire   [0:0] r_fu_1510_p2;
wire   [0:0] r_i_i_fu_1528_p2;
wire   [0:0] qb_fu_1466_p3;
wire   [0:0] qb_assign_1_fu_1534_p2;
wire   [17:0] tmp_52_fu_1540_p1;
wire   [0:0] tmp_40_fu_1418_p2;
wire   [11:0] tmp137_cast_cast_fu_1563_p3;
wire   [11:0] exp_V_fu_1405_p2;
wire   [11:0] tmp_53_fu_1570_p2;
wire   [10:0] tmp_110_fu_1576_p4;
wire   [11:0] pos2_fu_1601_p2;
wire   [0:0] tmp_112_fu_1616_p3;
wire  signed [31:0] pos1_cast_fu_1597_p1;
wire   [53:0] tmp_55_fu_1630_p1;
wire   [53:0] tmp_56_fu_1634_p2;
wire   [0:0] lD_fu_1639_p1;
wire   [0:0] tmp33_fu_1643_p2;
wire  signed [31:0] pos2_cast_fu_1606_p1;
wire   [0:0] tmp_67_not_fu_1689_p2;
wire   [0:0] tmp_60_fu_1678_p2;
wire   [0:0] sel_tmp20_fu_1695_p2;
wire  signed [31:0] tmp_44_fu_1707_p1;
wire   [31:0] tmp_45_fu_1710_p2;
wire   [0:0] sel_tmp1_fu_1725_p2;
wire   [0:0] sel_tmp2_fu_1730_p2;
wire   [0:0] sel_tmp3_fu_1735_p2;
wire   [0:0] sel_tmp4_fu_1740_p2;
wire   [17:0] sel_tmp_fu_1719_p3;
wire   [0:0] sel_tmp8_fu_1753_p2;
wire   [17:0] sel_tmp5_fu_1746_p3;
wire   [17:0] tmp_99_fu_1715_p1;
wire   [17:0] sel_tmp9_fu_1758_p3;
wire   [0:0] tmp136_demorgan_fu_1772_p2;
wire   [0:0] tmp32_fu_1776_p2;
wire   [0:0] rev1_fu_1796_p2;
wire   [53:0] r_V_fu_1806_p2;
wire   [0:0] or_cond115_i_fu_1801_p2;
wire   [0:0] Range2_all_ones_fu_1811_p2;
wire   [0:0] Range2_all_ones_1_i_fu_1816_p3;
wire   [0:0] tmp_59_fu_1833_p2;
wire   [0:0] Range1_all_zeros_fu_1838_p2;
wire   [0:0] or_cond117_i_fu_1824_p2;
wire   [0:0] Range1_all_ones_fu_1828_p2;
wire   [0:0] sel_tmp22_fu_1853_p3;
wire   [0:0] p_119_i_fu_1849_p2;
wire   [0:0] p_122_i_fu_1843_p2;
wire   [0:0] sel_tmp23_fu_1866_p3;
wire   [0:0] Range1_all_zeros_2_i_fu_1873_p3;
wire   [0:0] sel_tmp23_not_fu_1889_p2;
wire   [0:0] tmp34_fu_1895_p2;
wire   [0:0] carry_1_not_i_fu_1900_p2;
wire   [0:0] Range2_all_ones_1_no_fu_1905_p2;
wire   [0:0] tmp_115_fu_1923_p3;
wire   [0:0] brmerge123_i_fu_1911_p2;
wire   [0:0] Range1_all_ones_2_mu_fu_1917_p2;
wire   [0:0] p_120_i_fu_1930_p2;
wire   [0:0] deleted_zeros_fu_1881_p3;
wire   [0:0] Range1_all_ones_2_i_65_fu_1950_p2;
wire   [0:0] sel_tmp24_fu_1960_p2;
wire   [0:0] tmp35_fu_1970_p2;
wire   [0:0] sel_tmp26_fu_1980_p2;
wire   [0:0] tmp_61_fu_1954_p2;
wire   [0:0] sel_tmp25_fu_1975_p2;
wire   [0:0] deleted_zeros_0_not_s_fu_1992_p2;
wire   [0:0] brmerge_i9_fu_1996_p2;
wire   [0:0] tmp_62_fu_2001_p2;
wire   [0:0] deleted_ones_0_i_fu_1965_p2;
wire   [0:0] brmerge121_demorgan_s_fu_2012_p2;
wire   [0:0] neg_src_0_i_fu_1984_p3;
wire   [0:0] brmerge121_i_fu_2017_p2;
wire   [0:0] underflow_7_fu_2023_p2;
wire   [0:0] overflow_2_fu_2006_p2;
wire   [0:0] neg_src_0_i_not_fu_2035_p2;
wire   [0:0] tmp36_fu_2041_p2;
wire   [0:0] brmerge_i_i9_fu_2029_p2;
wire   [0:0] tmp_63_fu_2067_p2;
wire   [17:0] p_Val2_9_66_fu_2060_p3;
wire   [0:0] sel_tmp57_demorgan_fu_2079_p2;
wire   [17:0] sel_tmp27_fu_2072_p3;
wire   [0:0] brmerge5_fu_2047_p2;
wire   [0:0] sel_tmp29_fu_2090_p2;
wire   [0:0] tmp37_fu_2095_p2;
wire   [0:0] sel_tmp30_fu_2101_p2;
wire   [17:0] p_Val2_35_mux_fu_2053_p3;
wire   [17:0] sel_tmp28_fu_2083_p3;
wire   [1:0] p_Result_5_fu_2131_p4;
wire   [0:0] tmp_120_fu_2180_p3;
wire   [0:0] r_1_fu_2168_p2;
wire   [0:0] r_i_i1_fu_2187_p2;
wire   [0:0] qbit_fu_2161_p3;
wire   [0:0] qb_assign_3_fu_2193_p2;
wire   [17:0] p_Val2_30_fu_2152_p4;
wire   [17:0] tmp_64_fu_2199_p1;
wire   [17:0] p_Val2_31_fu_2203_p2;
wire   [0:0] newsignbit_8_fu_2209_p3;
wire   [0:0] tmp_119_fu_2173_p3;
wire   [0:0] tmp_65_fu_2217_p2;
wire   [0:0] carry_fu_2223_p2;
wire   [0:0] tmp_122_fu_2229_p3;
wire   [0:0] tmp_66_fu_2242_p2;
wire   [0:0] p_41_i_fu_2248_p2;
wire   [0:0] deleted_zeros_1_fu_2236_p3;
wire   [0:0] p_not_i9_fu_2265_p2;
wire   [0:0] brmerge_i2_fu_2271_p2;
wire   [0:0] tmp_67_fu_2277_p2;
wire   [0:0] deleted_ones_1_fu_2253_p3;
wire   [0:0] p_38_i_fu_2260_p2;
wire   [0:0] brmerge40_demorgan_i_fu_2288_p2;
wire   [0:0] tmp143_demorgan_fu_2294_p2;
wire   [0:0] tmp38_fu_2300_p2;
wire   [0:0] underflow_8_fu_2306_p2;
wire   [0:0] overflow_3_fu_2282_p2;
wire   [0:0] tmp39_fu_2317_p2;
wire   [0:0] brmerge_i_i10_fu_2311_p2;
wire   [0:0] underflow_8_not_fu_2323_p2;
wire   [17:0] p_Val2_38_mux_fu_2329_p3;
wire   [17:0] p_Val2_10_67_fu_2337_p3;
wire   [33:0] grp_fu_2365_p0;
wire  signed [17:0] grp_fu_2365_p1;
wire   [33:0] grp_fu_2379_p0;
wire  signed [17:0] grp_fu_2379_p1;
wire   [33:0] grp_fu_2365_p2;
wire   [15:0] tmp_11_fu_2405_p4;
wire   [0:0] newsignbit_9_fu_2397_p3;
wire   [0:0] p_not_i4_fu_2415_p2;
wire   [0:0] isneg_6_fu_2385_p3;
wire   [0:0] brmerge_i4_fu_2421_p2;
wire   [0:0] tmp_13_fu_2427_p2;
wire   [0:0] p_not38_i2_fu_2445_p2;
wire   [0:0] newsignbit_0_not_i2_fu_2439_p2;
wire   [0:0] brmerge39_i2_fu_2451_p2;
wire   [33:0] grp_fu_2379_p2;
wire   [15:0] tmp_17_fu_2483_p4;
wire   [0:0] newsignbit_10_fu_2475_p3;
wire   [0:0] p_not_i5_fu_2493_p2;
wire   [0:0] isneg_7_fu_2463_p3;
wire   [0:0] brmerge_i5_fu_2499_p2;
wire   [0:0] tmp_18_fu_2505_p2;
wire   [0:0] p_not38_i3_fu_2523_p2;
wire   [0:0] newsignbit_0_not_i3_fu_2517_p2;
wire   [0:0] brmerge39_i3_fu_2529_p2;
wire   [0:0] underflow_9_not_fu_2545_p2;
wire   [0:0] brmerge_i_i4_fu_2541_p2;
wire   [0:0] brmerge7_fu_2550_p2;
wire   [17:0] p_Val2_14_mux_fu_2555_p3;
wire   [17:0] p_Val2_s_69_fu_2562_p3;
wire   [0:0] underflow_10_not_fu_2581_p2;
wire   [0:0] brmerge_i_i5_fu_2577_p2;
wire   [0:0] brmerge8_fu_2586_p2;
wire   [17:0] p_Val2_17_mux_fu_2591_p3;
wire   [17:0] p_Val2_5_70_fu_2598_p3;
wire  signed [1:0] grp_fu_2613_p0;
reg    grp_fu_2365_ap_start;
wire    grp_fu_2365_ap_done;
reg    grp_fu_2379_ap_start;
wire    grp_fu_2379_ap_done;
reg   [41:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [15:0] p_Val2_20_fu_1167_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 42'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
end

Cordic_angulos_V #(
    .DataWidth( 15 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
angulos_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(angulos_V_address0),
    .ce0(angulos_V_ce0),
    .q0(angulos_V_q0)
);

Cordic_sitodp_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
Cordic_sitodp_32nbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_344_p0),
    .ce(1'b1),
    .dout(grp_fu_344_p1)
);

Cordic_dsqrt_64nscud #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Cordic_dsqrt_64nscud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(tmp_32_reg_2732),
    .ce(1'b1),
    .dout(grp_fu_347_p2)
);

Cordic_sdiv_34ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 38 ),
    .din0_WIDTH( 34 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
Cordic_sdiv_34ns_dEe_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_2365_ap_start),
    .done(grp_fu_2365_ap_done),
    .din0(grp_fu_2365_p0),
    .din1(grp_fu_2365_p1),
    .ce(1'b1),
    .dout(grp_fu_2365_p2)
);

Cordic_sdiv_34ns_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 38 ),
    .din0_WIDTH( 34 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
Cordic_sdiv_34ns_dEe_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_2379_ap_start),
    .done(grp_fu_2379_ap_done),
    .din0(grp_fu_2379_p0),
    .din1(grp_fu_2379_p1),
    .ce(1'b1),
    .dout(grp_fu_2379_p2)
);

Cordic_mac_mulsubeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 19 ))
Cordic_mac_mulsubeOg_U5(
    .din0(grp_fu_2613_p0),
    .din1(y_div_V_fu_936_p2),
    .din2(ap_phi_mux_p_Val2_7_61_phi_fu_276_p4),
    .dout(grp_fu_2613_p3)
);

Cordic_mul_mul_18fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
Cordic_mul_mul_18fYi_U6(
    .din0(ap_phi_mux_p_1_phi_fu_324_p4),
    .din1(this_assign_6_4_reg_2961),
    .dout(p_Val2_29_fu_2624_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter43 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_1_reg_320 <= 18'd65536;
    end else if (((ap_reg_pp0_iter42_exitcond_reg_2673 == 1'd0) & (ap_enable_reg_pp0_iter43 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_1_reg_320 <= K_m_t_V_fu_2345_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_Val2_11_reg_295 <= 18'd0;
    end else if (((ap_reg_pp0_iter42_exitcond_reg_2673 == 1'd0) & (ap_enable_reg_pp0_iter43 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_11_reg_295 <= ap_reg_pp0_iter42_x_ant_V_1_reg_2699;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_Val2_21_reg_253 <= p_Val2_21_ph_fu_855_p3;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_exitcond_reg_2673 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_21_reg_253 <= z_next_V_reg_2726;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_Val2_4_reg_263 <= y_ant_V_5_reg_2658;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_2673 == 1'd0))) begin
        p_Val2_4_reg_263 <= y_ant_V_1_fu_1116_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_Val2_7_61_reg_273 <= x_ant_V_5_reg_2663;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_reg_pp0_iter1_exitcond_reg_2673 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_7_61_reg_273 <= x_ant_V_1_reg_2699;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_Val2_8_reg_283 <= 18'd0;
    end else if (((ap_reg_pp0_iter42_exitcond_reg_2673 == 1'd0) & (ap_enable_reg_pp0_iter43 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_8_reg_283 <= ap_reg_pp0_iter42_y_ant_V_1_reg_2705;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_s_reg_307 <= 18'd0;
    end else if (((ap_reg_pp0_iter42_exitcond_reg_2673 == 1'd0) & (ap_enable_reg_pp0_iter43 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_s_reg_307 <= ap_reg_pp0_iter42_z_next_V_reg_2726;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sh_assign_reg_332 <= 5'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_2673 == 1'd0))) begin
        sh_assign_reg_332 <= pos_reg_2677;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter37_exitcond_reg_2673 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        F2_reg_2774 <= F2_fu_1325_p2;
        QUAN_INC_reg_2783 <= QUAN_INC_fu_1331_p2;
        icmp_reg_2821 <= icmp_fu_1399_p2;
        isneg_5_reg_2742 <= ireg_V_fu_1260_p1[32'd63];
        man_V_reg_2756 <= man_V_fu_1311_p3;
        sh_amt_reg_2789 <= sh_amt_fu_1349_p3;
        tmp_101_reg_2811 <= tmp_101_fu_1373_p1;
        tmp_33_reg_2751[10 : 0] <= tmp_33_fu_1285_p1[10 : 0];
        tmp_35_reg_2766 <= tmp_35_fu_1319_p2;
        tmp_39_reg_2801 <= tmp_39_fu_1361_p2;
        tmp_46_reg_2806 <= tmp_46_fu_1367_p2;
        tmp_50_reg_2816 <= tmp_50_fu_1383_p2;
        tmp_97_reg_2795 <= tmp_97_fu_1357_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter38_exitcond_reg_2673 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Range1_all_ones_1_reg_2887 <= Range1_all_ones_1_fu_1649_p2;
        Range1_all_zeros_1_reg_2916 <= Range1_all_zeros_1_fu_1684_p2;
        Range2_V_1_reg_2910 <= Range2_V_1_fu_1673_p2;
        icmp1_reg_2862 <= icmp1_fu_1586_p2;
        p_Val2_27_reg_2843 <= p_Val2_27_fu_1544_p2;
        pos1_reg_2868 <= pos1_fu_1592_p2;
        rev_reg_2880 <= rev_fu_1624_p2;
        sel_tmp13_reg_2855 <= sel_tmp13_fu_1558_p2;
        sel_tmp21_reg_2921 <= sel_tmp21_fu_1701_p2;
        sh_amt_cast_reg_2826 <= sh_amt_cast_fu_1410_p1;
        tmp_106_reg_2837 <= p_Val2_26_fu_1443_p3[32'd17];
        tmp_108_reg_2849 <= p_Val2_27_fu_1544_p2[32'd17];
        tmp_114_reg_2894 <= pos2_fu_1601_p2[32'd11];
        tmp_38_reg_2831 <= tmp_38_fu_1413_p2;
        tmp_54_reg_2873 <= tmp_54_fu_1610_p2;
        tmp_57_reg_2899 <= tmp_57_fu_1663_p2;
        tmp_58_reg_2905[31 : 0] <= tmp_58_fu_1669_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter39_exitcond_reg_2673 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Range1_all_ones_2_i_reg_2946 <= Range1_all_ones_2_i_fu_1858_p3;
        carry_1_i_reg_2934 <= carry_1_i_fu_1782_p2;
        deleted_ones_reg_2951 <= deleted_ones_fu_1936_p3;
        deleted_zeros_not_reg_2956 <= deleted_zeros_not_fu_1944_p2;
        newsignbit_7_reg_2939 <= p_Val2_28_fu_1765_p3[32'd17];
        p_Val2_28_reg_2927 <= p_Val2_28_fu_1765_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter41_exitcond_reg_2673 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Range1_all_ones_2_reg_2987 <= Range1_all_ones_2_fu_2140_p2;
        Range1_all_zeros_2_reg_2994 <= Range1_all_zeros_2_fu_2146_p2;
        p_Val2_29_reg_2966 <= p_Val2_29_fu_2624_p2;
        signbit_2_reg_2975 <= p_Val2_29_fu_2624_p2[32'd35];
        tmp_118_reg_2982 <= tmp_118_fu_2128_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_2673 == 1'd0))) begin
        angulos_V_load_reg_2711 <= angulos_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter10_exitcond_reg_2673 <= ap_reg_pp0_iter9_exitcond_reg_2673;
        ap_reg_pp0_iter10_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter9_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter10_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter9_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter10_z_next_V_reg_2726 <= ap_reg_pp0_iter9_z_next_V_reg_2726;
        ap_reg_pp0_iter11_exitcond_reg_2673 <= ap_reg_pp0_iter10_exitcond_reg_2673;
        ap_reg_pp0_iter11_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter10_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter11_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter10_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter11_z_next_V_reg_2726 <= ap_reg_pp0_iter10_z_next_V_reg_2726;
        ap_reg_pp0_iter12_exitcond_reg_2673 <= ap_reg_pp0_iter11_exitcond_reg_2673;
        ap_reg_pp0_iter12_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter11_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter12_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter11_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter12_z_next_V_reg_2726 <= ap_reg_pp0_iter11_z_next_V_reg_2726;
        ap_reg_pp0_iter13_exitcond_reg_2673 <= ap_reg_pp0_iter12_exitcond_reg_2673;
        ap_reg_pp0_iter13_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter12_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter13_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter12_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter13_z_next_V_reg_2726 <= ap_reg_pp0_iter12_z_next_V_reg_2726;
        ap_reg_pp0_iter14_exitcond_reg_2673 <= ap_reg_pp0_iter13_exitcond_reg_2673;
        ap_reg_pp0_iter14_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter13_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter14_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter13_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter14_z_next_V_reg_2726 <= ap_reg_pp0_iter13_z_next_V_reg_2726;
        ap_reg_pp0_iter15_exitcond_reg_2673 <= ap_reg_pp0_iter14_exitcond_reg_2673;
        ap_reg_pp0_iter15_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter14_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter15_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter14_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter15_z_next_V_reg_2726 <= ap_reg_pp0_iter14_z_next_V_reg_2726;
        ap_reg_pp0_iter16_exitcond_reg_2673 <= ap_reg_pp0_iter15_exitcond_reg_2673;
        ap_reg_pp0_iter16_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter15_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter16_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter15_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter16_z_next_V_reg_2726 <= ap_reg_pp0_iter15_z_next_V_reg_2726;
        ap_reg_pp0_iter17_exitcond_reg_2673 <= ap_reg_pp0_iter16_exitcond_reg_2673;
        ap_reg_pp0_iter17_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter16_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter17_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter16_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter17_z_next_V_reg_2726 <= ap_reg_pp0_iter16_z_next_V_reg_2726;
        ap_reg_pp0_iter18_exitcond_reg_2673 <= ap_reg_pp0_iter17_exitcond_reg_2673;
        ap_reg_pp0_iter18_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter17_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter18_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter17_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter18_z_next_V_reg_2726 <= ap_reg_pp0_iter17_z_next_V_reg_2726;
        ap_reg_pp0_iter19_exitcond_reg_2673 <= ap_reg_pp0_iter18_exitcond_reg_2673;
        ap_reg_pp0_iter19_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter18_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter19_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter18_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter19_z_next_V_reg_2726 <= ap_reg_pp0_iter18_z_next_V_reg_2726;
        ap_reg_pp0_iter20_exitcond_reg_2673 <= ap_reg_pp0_iter19_exitcond_reg_2673;
        ap_reg_pp0_iter20_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter19_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter20_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter19_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter20_z_next_V_reg_2726 <= ap_reg_pp0_iter19_z_next_V_reg_2726;
        ap_reg_pp0_iter21_exitcond_reg_2673 <= ap_reg_pp0_iter20_exitcond_reg_2673;
        ap_reg_pp0_iter21_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter20_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter21_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter20_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter21_z_next_V_reg_2726 <= ap_reg_pp0_iter20_z_next_V_reg_2726;
        ap_reg_pp0_iter22_exitcond_reg_2673 <= ap_reg_pp0_iter21_exitcond_reg_2673;
        ap_reg_pp0_iter22_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter21_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter22_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter21_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter22_z_next_V_reg_2726 <= ap_reg_pp0_iter21_z_next_V_reg_2726;
        ap_reg_pp0_iter23_exitcond_reg_2673 <= ap_reg_pp0_iter22_exitcond_reg_2673;
        ap_reg_pp0_iter23_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter22_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter23_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter22_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter23_z_next_V_reg_2726 <= ap_reg_pp0_iter22_z_next_V_reg_2726;
        ap_reg_pp0_iter24_exitcond_reg_2673 <= ap_reg_pp0_iter23_exitcond_reg_2673;
        ap_reg_pp0_iter24_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter23_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter24_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter23_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter24_z_next_V_reg_2726 <= ap_reg_pp0_iter23_z_next_V_reg_2726;
        ap_reg_pp0_iter25_exitcond_reg_2673 <= ap_reg_pp0_iter24_exitcond_reg_2673;
        ap_reg_pp0_iter25_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter24_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter25_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter24_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter25_z_next_V_reg_2726 <= ap_reg_pp0_iter24_z_next_V_reg_2726;
        ap_reg_pp0_iter26_exitcond_reg_2673 <= ap_reg_pp0_iter25_exitcond_reg_2673;
        ap_reg_pp0_iter26_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter25_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter26_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter25_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter26_z_next_V_reg_2726 <= ap_reg_pp0_iter25_z_next_V_reg_2726;
        ap_reg_pp0_iter27_exitcond_reg_2673 <= ap_reg_pp0_iter26_exitcond_reg_2673;
        ap_reg_pp0_iter27_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter26_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter27_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter26_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter27_z_next_V_reg_2726 <= ap_reg_pp0_iter26_z_next_V_reg_2726;
        ap_reg_pp0_iter28_exitcond_reg_2673 <= ap_reg_pp0_iter27_exitcond_reg_2673;
        ap_reg_pp0_iter28_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter27_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter28_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter27_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter28_z_next_V_reg_2726 <= ap_reg_pp0_iter27_z_next_V_reg_2726;
        ap_reg_pp0_iter29_exitcond_reg_2673 <= ap_reg_pp0_iter28_exitcond_reg_2673;
        ap_reg_pp0_iter29_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter28_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter29_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter28_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter29_z_next_V_reg_2726 <= ap_reg_pp0_iter28_z_next_V_reg_2726;
        ap_reg_pp0_iter2_exitcond_reg_2673 <= ap_reg_pp0_iter1_exitcond_reg_2673;
        ap_reg_pp0_iter2_x_ant_V_1_reg_2699 <= x_ant_V_1_reg_2699;
        ap_reg_pp0_iter2_y_ant_V_1_reg_2705 <= y_ant_V_1_reg_2705;
        ap_reg_pp0_iter30_exitcond_reg_2673 <= ap_reg_pp0_iter29_exitcond_reg_2673;
        ap_reg_pp0_iter30_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter29_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter30_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter29_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter30_z_next_V_reg_2726 <= ap_reg_pp0_iter29_z_next_V_reg_2726;
        ap_reg_pp0_iter31_exitcond_reg_2673 <= ap_reg_pp0_iter30_exitcond_reg_2673;
        ap_reg_pp0_iter31_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter30_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter31_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter30_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter31_z_next_V_reg_2726 <= ap_reg_pp0_iter30_z_next_V_reg_2726;
        ap_reg_pp0_iter32_exitcond_reg_2673 <= ap_reg_pp0_iter31_exitcond_reg_2673;
        ap_reg_pp0_iter32_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter31_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter32_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter31_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter32_z_next_V_reg_2726 <= ap_reg_pp0_iter31_z_next_V_reg_2726;
        ap_reg_pp0_iter33_exitcond_reg_2673 <= ap_reg_pp0_iter32_exitcond_reg_2673;
        ap_reg_pp0_iter33_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter32_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter33_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter32_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter33_z_next_V_reg_2726 <= ap_reg_pp0_iter32_z_next_V_reg_2726;
        ap_reg_pp0_iter34_exitcond_reg_2673 <= ap_reg_pp0_iter33_exitcond_reg_2673;
        ap_reg_pp0_iter34_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter33_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter34_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter33_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter34_z_next_V_reg_2726 <= ap_reg_pp0_iter33_z_next_V_reg_2726;
        ap_reg_pp0_iter35_exitcond_reg_2673 <= ap_reg_pp0_iter34_exitcond_reg_2673;
        ap_reg_pp0_iter35_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter34_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter35_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter34_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter35_z_next_V_reg_2726 <= ap_reg_pp0_iter34_z_next_V_reg_2726;
        ap_reg_pp0_iter36_exitcond_reg_2673 <= ap_reg_pp0_iter35_exitcond_reg_2673;
        ap_reg_pp0_iter36_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter35_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter36_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter35_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter36_z_next_V_reg_2726 <= ap_reg_pp0_iter35_z_next_V_reg_2726;
        ap_reg_pp0_iter37_exitcond_reg_2673 <= ap_reg_pp0_iter36_exitcond_reg_2673;
        ap_reg_pp0_iter37_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter36_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter37_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter36_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter37_z_next_V_reg_2726 <= ap_reg_pp0_iter36_z_next_V_reg_2726;
        ap_reg_pp0_iter38_exitcond_reg_2673 <= ap_reg_pp0_iter37_exitcond_reg_2673;
        ap_reg_pp0_iter38_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter37_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter38_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter37_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter38_z_next_V_reg_2726 <= ap_reg_pp0_iter37_z_next_V_reg_2726;
        ap_reg_pp0_iter39_QUAN_INC_reg_2783 <= QUAN_INC_reg_2783;
        ap_reg_pp0_iter39_exitcond_reg_2673 <= ap_reg_pp0_iter38_exitcond_reg_2673;
        ap_reg_pp0_iter39_isneg_5_reg_2742 <= isneg_5_reg_2742;
        ap_reg_pp0_iter39_tmp_35_reg_2766 <= tmp_35_reg_2766;
        ap_reg_pp0_iter39_tmp_97_reg_2795 <= tmp_97_reg_2795;
        ap_reg_pp0_iter39_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter38_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter39_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter38_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter39_z_next_V_reg_2726 <= ap_reg_pp0_iter38_z_next_V_reg_2726;
        ap_reg_pp0_iter3_exitcond_reg_2673 <= ap_reg_pp0_iter2_exitcond_reg_2673;
        ap_reg_pp0_iter3_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter2_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter3_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter2_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter40_exitcond_reg_2673 <= ap_reg_pp0_iter39_exitcond_reg_2673;
        ap_reg_pp0_iter40_icmp1_reg_2862 <= icmp1_reg_2862;
        ap_reg_pp0_iter40_isneg_5_reg_2742 <= ap_reg_pp0_iter39_isneg_5_reg_2742;
        ap_reg_pp0_iter40_tmp_35_reg_2766 <= ap_reg_pp0_iter39_tmp_35_reg_2766;
        ap_reg_pp0_iter40_tmp_54_reg_2873 <= tmp_54_reg_2873;
        ap_reg_pp0_iter40_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter39_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter40_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter39_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter40_z_next_V_reg_2726 <= ap_reg_pp0_iter39_z_next_V_reg_2726;
        ap_reg_pp0_iter41_exitcond_reg_2673 <= ap_reg_pp0_iter40_exitcond_reg_2673;
        ap_reg_pp0_iter41_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter40_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter41_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter40_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter41_z_next_V_reg_2726 <= ap_reg_pp0_iter40_z_next_V_reg_2726;
        ap_reg_pp0_iter42_exitcond_reg_2673 <= ap_reg_pp0_iter41_exitcond_reg_2673;
        ap_reg_pp0_iter42_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter41_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter42_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter41_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter42_z_next_V_reg_2726 <= ap_reg_pp0_iter41_z_next_V_reg_2726;
        ap_reg_pp0_iter4_exitcond_reg_2673 <= ap_reg_pp0_iter3_exitcond_reg_2673;
        ap_reg_pp0_iter4_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter3_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter4_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter3_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter4_z_next_V_reg_2726 <= z_next_V_reg_2726;
        ap_reg_pp0_iter5_exitcond_reg_2673 <= ap_reg_pp0_iter4_exitcond_reg_2673;
        ap_reg_pp0_iter5_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter4_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter5_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter4_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter5_z_next_V_reg_2726 <= ap_reg_pp0_iter4_z_next_V_reg_2726;
        ap_reg_pp0_iter6_exitcond_reg_2673 <= ap_reg_pp0_iter5_exitcond_reg_2673;
        ap_reg_pp0_iter6_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter5_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter6_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter5_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter6_z_next_V_reg_2726 <= ap_reg_pp0_iter5_z_next_V_reg_2726;
        ap_reg_pp0_iter7_exitcond_reg_2673 <= ap_reg_pp0_iter6_exitcond_reg_2673;
        ap_reg_pp0_iter7_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter6_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter7_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter6_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter7_z_next_V_reg_2726 <= ap_reg_pp0_iter6_z_next_V_reg_2726;
        ap_reg_pp0_iter8_exitcond_reg_2673 <= ap_reg_pp0_iter7_exitcond_reg_2673;
        ap_reg_pp0_iter8_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter7_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter8_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter7_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter8_z_next_V_reg_2726 <= ap_reg_pp0_iter7_z_next_V_reg_2726;
        ap_reg_pp0_iter9_exitcond_reg_2673 <= ap_reg_pp0_iter8_exitcond_reg_2673;
        ap_reg_pp0_iter9_x_ant_V_1_reg_2699 <= ap_reg_pp0_iter8_x_ant_V_1_reg_2699;
        ap_reg_pp0_iter9_y_ant_V_1_reg_2705 <= ap_reg_pp0_iter8_y_ant_V_1_reg_2705;
        ap_reg_pp0_iter9_z_next_V_reg_2726 <= ap_reg_pp0_iter8_z_next_V_reg_2726;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_exitcond_reg_2673 <= exitcond_reg_2673;
        ap_reg_pp0_iter1_i_op_assign_reg_2682 <= i_op_assign_reg_2682;
        exitcond_reg_2673 <= exitcond_fu_861_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_fu_861_p2 == 1'd0))) begin
        i_op_assign_reg_2682 <= i_op_assign_fu_895_p3;
        tmp_29_reg_2694[6 : 1] <= tmp_29_fu_920_p2[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        newsignbit_3_reg_2643 <= p_Val2_9_fu_632_p2[32'd18];
        p_Val2_10_reg_2638 <= {{p_Val2_9_fu_632_p2[18:1]}};
        sel_tmp17_reg_2648 <= sel_tmp17_fu_748_p3;
        sel_tmp19_reg_2653 <= sel_tmp19_fu_774_p2;
        signbit_1_reg_2633 <= p_Val2_9_fu_632_p2[32'd19];
        x_ant_V_5_reg_2663 <= x_ant_V_5_fu_836_p3;
        y_ant_V_5_reg_2658 <= y_ant_V_5_fu_804_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        overflow_1_reg_3045 <= overflow_1_fu_2511_p2;
        overflow_reg_3026 <= overflow_fu_2433_p2;
        p_Val2_12_reg_3020 <= p_Val2_12_fu_2393_p1;
        p_Val2_15_reg_3039 <= p_Val2_15_fu_2471_p1;
        underflow_10_reg_3051 <= underflow_10_fu_2535_p2;
        underflow_9_reg_3032 <= underflow_9_fu_2457_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond_reg_2673 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_20_reg_2721 <= p_Val2_20_fu_1167_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pos_reg_2677 <= pos_fu_867_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter36_exitcond_reg_2673 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        raiz_reg_2737 <= grp_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter40_exitcond_reg_2673 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        this_assign_6_4_reg_2961 <= this_assign_6_4_fu_2106_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter5_exitcond_reg_2673 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_32_reg_2732 <= grp_fu_344_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_2673 == 1'd0))) begin
        x_ant_V_1_reg_2699 <= x_ant_V_1_fu_1016_p3;
        y_ant_V_1_reg_2705 <= y_ant_V_1_fu_1116_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_reg_pp0_iter2_exitcond_reg_2673 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        z_next_V_reg_2726 <= z_next_V_fu_1252_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        angulos_V_ce0 = 1'b1;
    end else begin
        angulos_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_861_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_reg_pp0_iter42_exitcond_reg_2673 == 1'd0) & (ap_enable_reg_pp0_iter43 == 1'b1))) begin
        ap_phi_mux_p_1_phi_fu_324_p4 = K_m_t_V_fu_2345_p3;
    end else begin
        ap_phi_mux_p_1_phi_fu_324_p4 = p_1_reg_320;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_reg_pp0_iter3_exitcond_reg_2673 == 1'd0))) begin
        ap_phi_mux_p_Val2_21_phi_fu_256_p4 = z_next_V_reg_2726;
    end else begin
        ap_phi_mux_p_Val2_21_phi_fu_256_p4 = p_Val2_21_reg_253;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_reg_2673 == 1'd0))) begin
        ap_phi_mux_p_Val2_4_phi_fu_266_p4 = y_ant_V_1_fu_1116_p3;
    end else begin
        ap_phi_mux_p_Val2_4_phi_fu_266_p4 = p_Val2_4_reg_263;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_reg_pp0_iter1_exitcond_reg_2673 == 1'd0))) begin
        ap_phi_mux_p_Val2_7_61_phi_fu_276_p4 = x_ant_V_1_reg_2699;
    end else begin
        ap_phi_mux_p_Val2_7_61_phi_fu_276_p4 = p_Val2_7_61_reg_273;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_reg_2673 == 1'd0))) begin
        ap_phi_mux_sh_assign_phi_fu_336_p4 = pos_reg_2677;
    end else begin
        ap_phi_mux_sh_assign_phi_fu_336_p4 = sh_assign_reg_332;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_2365_ap_start = 1'b1;
    end else begin
        grp_fu_2365_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_2379_ap_start = 1'b1;
    end else begin
        grp_fu_2379_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        x_out_V_ap_vld = 1'b1;
    end else begin
        x_out_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        y_out_V_ap_vld = 1'b1;
    end else begin
        y_out_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        z_out_V_ap_vld = 1'b1;
    end else begin
        z_out_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_861_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter42 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter43 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter42 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter43 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_861_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_1325_p2 = (12'd1075 - tmp_33_fu_1285_p1);

assign K_m_t_V_fu_2345_p3 = ((underflow_8_not_fu_2323_p2[0:0] === 1'b1) ? p_Val2_38_mux_fu_2329_p3 : p_Val2_10_67_fu_2337_p3);

assign OP1_V_cast_fu_942_p1 = $signed(i_op_assign_reg_2682);

assign OP2_V_1_cast_fu_442_p1 = $signed(y_V);

assign OP2_V_cast_fu_366_p1 = $signed(x_V);

assign QUAN_INC_fu_1331_p2 = (($signed(F2_fu_1325_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign Range1_all_ones_1_fu_1649_p2 = (tmp_54_fu_1610_p2 & tmp33_fu_1643_p2);

assign Range1_all_ones_2_fu_2140_p2 = ((p_Result_5_fu_2131_p4 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_ones_2_i_65_fu_1950_p2 = (carry_1_i_reg_2934 & Range1_all_ones_2_i_reg_2946);

assign Range1_all_ones_2_i_fu_1858_p3 = ((or_cond117_i_fu_1824_p2[0:0] === 1'b1) ? Range1_all_ones_fu_1828_p2 : sel_tmp22_fu_1853_p3);

assign Range1_all_ones_2_mu_fu_1917_p2 = (carry_1_not_i_fu_1900_p2 & Range1_all_ones_2_i_fu_1858_p3);

assign Range1_all_ones_fu_1828_p2 = (Range2_all_ones_1_i_fu_1816_p3 & Range1_all_ones_1_reg_2887);

assign Range1_all_zeros_1_fu_1684_p2 = ((man_V_reg_2756 == 54'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_2146_p2 = ((p_Result_5_fu_2131_p4 == 2'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_i_fu_1873_p3 = ((or_cond117_i_fu_1824_p2[0:0] === 1'b1) ? p_122_i_fu_1843_p2 : sel_tmp23_fu_1866_p3);

assign Range1_all_zeros_fu_1838_p2 = (1'd1 ^ Range1_all_ones_1_reg_2887);

assign Range2_V_1_fu_1673_p2 = man_V_reg_2756 >> tmp_58_fu_1669_p1;

assign Range2_all_ones_1_i_fu_1816_p3 = ((or_cond115_i_fu_1801_p2[0:0] === 1'b1) ? Range2_all_ones_fu_1811_p2 : rev1_fu_1796_p2);

assign Range2_all_ones_1_no_fu_1905_p2 = (1'd1 ^ Range2_all_ones_1_i_fu_1816_p3);

assign Range2_all_ones_fu_1811_p2 = ((Range2_V_1_reg_2910 == r_V_fu_1806_p2) ? 1'b1 : 1'b0);

assign angulos_V_address0 = tmp_25_fu_903_p1;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd41];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign brmerge121_demorgan_s_fu_2012_p2 = (newsignbit_7_reg_2939 & deleted_ones_0_i_fu_1965_p2);

assign brmerge121_i_fu_2017_p2 = (brmerge121_demorgan_s_fu_2012_p2 ^ 1'd1);

assign brmerge123_i_fu_1911_p2 = (carry_1_not_i_fu_1900_p2 | Range2_all_ones_1_no_fu_1905_p2);

assign brmerge39_i2_fu_2451_p2 = (p_not38_i2_fu_2445_p2 | newsignbit_0_not_i2_fu_2439_p2);

assign brmerge39_i3_fu_2529_p2 = (p_not38_i3_fu_2523_p2 | newsignbit_0_not_i3_fu_2517_p2);

assign brmerge40_demorgan_i_fu_2288_p2 = (newsignbit_8_fu_2209_p3 & deleted_ones_1_fu_2253_p3);

assign brmerge5_fu_2047_p2 = (tmp36_fu_2041_p2 | brmerge121_demorgan_s_fu_2012_p2);

assign brmerge6_fu_682_p2 = (newsignbit_3_fu_656_p3 | neg_src_5_not_fu_676_p2);

assign brmerge7_fu_2550_p2 = (underflow_9_not_fu_2545_p2 | overflow_reg_3026);

assign brmerge8_fu_2586_p2 = (underflow_10_not_fu_2581_p2 | overflow_1_reg_3045);

assign brmerge9_fu_594_p2 = (newsignbit_2_fu_562_p3 | neg_src_3_not_fu_588_p2);

assign brmerge_i2_fu_2271_p2 = (p_not_i9_fu_2265_p2 | newsignbit_8_fu_2209_p3);

assign brmerge_i4_fu_2421_p2 = (p_not_i4_fu_2415_p2 | newsignbit_9_fu_2397_p3);

assign brmerge_i5_fu_2499_p2 = (p_not_i5_fu_2493_p2 | newsignbit_10_fu_2475_p3);

assign brmerge_i9_fu_1996_p2 = (newsignbit_7_reg_2939 | deleted_zeros_0_not_s_fu_1992_p2);

assign brmerge_i_i10_fu_2311_p2 = (underflow_8_fu_2306_p2 | overflow_3_fu_2282_p2);

assign brmerge_i_i1_fu_498_p2 = (newsignbit_1_fu_464_p3 ^ isneg_1_fu_452_p3);

assign brmerge_i_i2_fu_582_p2 = (signbit_fu_544_p3 ^ newsignbit_2_fu_562_p3);

assign brmerge_i_i3_fu_844_p2 = (signbit_1_reg_2633 ^ newsignbit_3_reg_2643);

assign brmerge_i_i4_fu_2541_p2 = (underflow_9_reg_3032 | overflow_reg_3026);

assign brmerge_i_i5_fu_2577_p2 = (underflow_10_reg_3051 | overflow_1_reg_3045);

assign brmerge_i_i6_fu_988_p2 = (newsignbit_4_fu_963_p3 ^ isneg_2_fu_953_p3);

assign brmerge_i_i7_fu_1088_p2 = (newsignbit_5_fu_1062_p3 ^ isneg_3_fu_1048_p3);

assign brmerge_i_i8_fu_1224_p2 = (newsignbit_6_fu_1198_p3 ^ isneg_4_fu_1186_p3);

assign brmerge_i_i9_fu_2029_p2 = (underflow_7_fu_2023_p2 | overflow_2_fu_2006_p2);

assign brmerge_i_i_fu_422_p2 = (newsignbit_fu_388_p3 ^ isneg_fu_376_p3);

assign carry_1_i_fu_1782_p2 = (tmp32_fu_1776_p2 & sel_tmp8_fu_1753_p2);

assign carry_1_not_i_fu_1900_p2 = (tmp_108_reg_2849 | tmp34_fu_1895_p2);

assign carry_fu_2223_p2 = (tmp_65_fu_2217_p2 & tmp_119_fu_2173_p3);

assign deleted_ones_0_i_fu_1965_p2 = (sel_tmp24_fu_1960_p2 | deleted_ones_reg_2951);

assign deleted_ones_1_fu_2253_p3 = ((carry_fu_2223_p2[0:0] === 1'b1) ? p_41_i_fu_2248_p2 : Range1_all_ones_2_reg_2987);

assign deleted_ones_fu_1936_p3 = ((brmerge123_i_fu_1911_p2[0:0] === 1'b1) ? Range1_all_ones_2_mu_fu_1917_p2 : p_120_i_fu_1930_p2);

assign deleted_zeros_0_not_s_fu_1992_p2 = (deleted_zeros_not_reg_2956 & ap_reg_pp0_iter40_tmp_54_reg_2873);

assign deleted_zeros_1_fu_2236_p3 = ((carry_fu_2223_p2[0:0] === 1'b1) ? Range1_all_ones_2_reg_2987 : Range1_all_zeros_2_reg_2994);

assign deleted_zeros_fu_1881_p3 = ((carry_1_i_fu_1782_p2[0:0] === 1'b1) ? Range1_all_ones_2_i_fu_1858_p3 : Range1_all_zeros_2_i_fu_1873_p3);

assign deleted_zeros_not_fu_1944_p2 = (deleted_zeros_fu_1881_p3 ^ 1'd1);

assign exitcond_fu_861_p2 = ((ap_phi_mux_sh_assign_phi_fu_336_p4 == 5'd20) ? 1'b1 : 1'b0);

assign exp_V_fu_1405_p2 = ($signed(12'd3073) + $signed(tmp_33_reg_2751));

assign exp_tmp_V_fu_1275_p4 = {{ireg_V_fu_1260_p1[62:52]}};

assign grp_fu_2365_p0 = {{p_Val2_11_reg_295}, {16'd0}};

assign grp_fu_2365_p1 = tmp_6_fu_2361_p1;

assign grp_fu_2379_p0 = {{p_Val2_8_reg_283}, {16'd0}};

assign grp_fu_2379_p1 = tmp_6_fu_2361_p1;

assign grp_fu_2613_p0 = OP1_V_cast_fu_942_p1;

assign grp_fu_344_p0 = (tmp_49_cast_fu_1150_p1 | 32'd1);

assign i_op_assign_fu_895_p3 = ((tmp_20_fu_889_p2[0:0] === 1'b1) ? signo_cast_fu_881_p3 : 2'd0);

assign icmp1_fu_1586_p2 = (($signed(tmp_110_fu_1576_p4) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign icmp_fu_1399_p2 = (($signed(tmp_109_fu_1389_p4) < $signed(8'd1)) ? 1'b1 : 1'b0);

assign ireg_V_fu_1260_p1 = raiz_reg_2737;

assign isneg_1_fu_452_p3 = p_Val2_2_fu_446_p2[32'd18];

assign isneg_2_fu_953_p3 = grp_fu_2613_p3[32'd18];

assign isneg_3_fu_1048_p3 = p_Val2_18_fu_1042_p2[32'd18];

assign isneg_4_fu_1186_p3 = p_Val2_22_fu_1180_p2[32'd18];

assign isneg_5_fu_1267_p3 = ireg_V_fu_1260_p1[32'd63];

assign isneg_6_fu_2385_p3 = grp_fu_2365_p2[32'd33];

assign isneg_7_fu_2463_p3 = grp_fu_2379_p2[32'd33];

assign isneg_fu_376_p3 = p_Val2_s_fu_370_p2[32'd18];

assign lD_fu_1639_p1 = tmp_56_fu_1634_p2[0:0];

assign man_V_1_fu_1305_p2 = (54'd0 - p_Result_1_fu_1301_p1);

assign man_V_fu_1311_p3 = ((isneg_5_fu_1267_p3[0:0] === 1'b1) ? man_V_1_fu_1305_p2 : p_Result_1_fu_1301_p1);

assign neg_src_0_i_fu_1984_p3 = ((sel_tmp26_fu_1980_p2[0:0] === 1'b1) ? tmp_61_fu_1954_p2 : sel_tmp25_fu_1975_p2);

assign neg_src_0_i_not_fu_2035_p2 = (neg_src_0_i_fu_1984_p3 ^ 1'd1);

assign neg_src_3_not_fu_588_p2 = (signbit_fu_544_p3 ^ 1'd1);

assign neg_src_5_not_fu_676_p2 = (signbit_1_fu_638_p3 ^ 1'd1);

assign newsignbit_0_not_i2_fu_2439_p2 = (newsignbit_9_fu_2397_p3 ^ 1'd1);

assign newsignbit_0_not_i3_fu_2517_p2 = (newsignbit_10_fu_2475_p3 ^ 1'd1);

assign newsignbit_10_fu_2475_p3 = grp_fu_2379_p2[32'd17];

assign newsignbit_1_fu_464_p3 = p_Val2_2_fu_446_p2[32'd17];

assign newsignbit_2_fu_562_p3 = p_Val2_5_fu_538_p2[32'd18];

assign newsignbit_3_fu_656_p3 = p_Val2_9_fu_632_p2[32'd18];

assign newsignbit_4_fu_963_p3 = grp_fu_2613_p3[32'd17];

assign newsignbit_5_fu_1062_p3 = p_Val2_19_fu_1056_p2[32'd17];

assign newsignbit_6_fu_1198_p3 = p_Val2_22_fu_1180_p2[32'd17];

assign newsignbit_8_fu_2209_p3 = p_Val2_31_fu_2203_p2[32'd17];

assign newsignbit_9_fu_2397_p3 = grp_fu_2365_p2[32'd17];

assign newsignbit_fu_388_p3 = p_Val2_s_fu_370_p2[32'd17];

assign or_cond115_i_fu_1801_p2 = (tmp_57_reg_2899 & rev1_fu_1796_p2);

assign or_cond117_i_fu_1824_p2 = (tmp_57_reg_2899 & rev_reg_2880);

assign overflow_1_fu_2511_p2 = (tmp_18_fu_2505_p2 & brmerge_i5_fu_2499_p2);

assign overflow_2_fu_2006_p2 = (tmp_62_fu_2001_p2 & brmerge_i9_fu_1996_p2);

assign overflow_3_fu_2282_p2 = (tmp_67_fu_2277_p2 & brmerge_i2_fu_2271_p2);

assign overflow_fu_2433_p2 = (tmp_13_fu_2427_p2 & brmerge_i4_fu_2421_p2);

assign p_119_i_fu_1849_p2 = (rev_reg_2880 | Range1_all_zeros_1_reg_2916);

assign p_120_i_fu_1930_p2 = (tmp_115_fu_1923_p3 | Range1_all_zeros_fu_1838_p2);

assign p_122_i_fu_1843_p2 = (tmp_59_fu_1833_p2 & Range1_all_zeros_fu_1838_p2);

assign p_38_i_fu_2260_p2 = (carry_fu_2223_p2 & Range1_all_ones_2_reg_2987);

assign p_41_i_fu_2248_p2 = (tmp_66_fu_2242_p2 & signbit_2_reg_2975);

assign p_Result_1_fu_1301_p1 = tmp_34_fu_1293_p3;

assign p_Result_5_fu_2131_p4 = {{p_Val2_29_fu_2624_p2[35:34]}};

assign p_Result_s_fu_1499_p2 = (tmp_104_fu_1493_p2 & man_V_reg_2756);

assign p_Val2_10_67_fu_2337_p3 = ((underflow_8_fu_2306_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_31_fu_2203_p2);

assign p_Val2_10_fu_646_p4 = {{p_Val2_9_fu_632_p2[18:1]}};

assign p_Val2_10_mux_fu_848_p3 = ((brmerge_i_i3_fu_844_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_10_reg_2638);

assign p_Val2_12_fu_2393_p1 = grp_fu_2365_p2[17:0];

assign p_Val2_14_mux_fu_2555_p3 = ((brmerge_i_i4_fu_2541_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_12_reg_3020);

assign p_Val2_15_fu_2471_p1 = grp_fu_2379_p2[17:0];

assign p_Val2_16_fu_960_p1 = grp_fu_2613_p3[17:0];

assign p_Val2_17_fu_1028_p0 = OP1_V_cast_fu_942_p1;

assign p_Val2_17_fu_1028_p1 = x_div_V_fu_930_p2;

assign p_Val2_17_fu_1028_p2 = ($signed(p_Val2_17_fu_1028_p0) * $signed(p_Val2_17_fu_1028_p1));

assign p_Val2_17_mux_fu_2591_p3 = ((brmerge_i_i5_fu_2577_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_15_reg_3039);

assign p_Val2_18_fu_1042_p2 = ($signed(p_Val2_17_fu_1028_p2) + $signed(tmp_37_cast_fu_1034_p1));

assign p_Val2_19_fu_1056_p2 = (p_Val2_4_reg_263 + tmp_88_fu_1038_p1);

assign p_Val2_1_58_fu_472_p3 = ((underflow_fu_416_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_1_fu_384_p1);

assign p_Val2_1_fu_384_p1 = p_Val2_s_fu_370_p2[17:0];

assign p_Val2_1_mux_fu_434_p3 = ((brmerge_i_i_fu_422_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_1_fu_384_p1);

assign p_Val2_20_fu_1167_p0 = ap_reg_pp0_iter1_i_op_assign_reg_2682;

assign p_Val2_20_fu_1167_p1 = p_Val2_20_fu_1167_p10;

assign p_Val2_20_fu_1167_p10 = angulos_V_load_reg_2711;

assign p_Val2_20_fu_1167_p2 = ($signed(p_Val2_20_fu_1167_p0) * $signed({{1'b0}, {p_Val2_20_fu_1167_p1}}));

assign p_Val2_21_mux_fu_1000_p3 = ((brmerge_i_i6_fu_988_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_16_fu_960_p1);

assign p_Val2_21_ph_fu_855_p3 = ((sel_tmp19_reg_2653[0:0] === 1'b1) ? p_Val2_10_mux_fu_848_p3 : sel_tmp17_reg_2648);

assign p_Val2_22_fu_1180_p2 = ($signed(tmp_43_cast_fu_1173_p1) - $signed(tmp_44_cast_fu_1177_p1));

assign p_Val2_23_fu_1194_p1 = p_Val2_22_fu_1180_p2[17:0];

assign p_Val2_25_mux_fu_1100_p3 = ((brmerge_i_i7_fu_1088_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_19_fu_1056_p2);

assign p_Val2_26_fu_1443_p3 = ((tmp_39_reg_2801[0:0] === 1'b1) ? tmp_98_fu_1432_p1 : storemerge_fu_1436_p3);

assign p_Val2_27_fu_1544_p2 = (p_Val2_26_fu_1443_p3 + tmp_52_fu_1540_p1);

assign p_Val2_28_fu_1765_p3 = ((sel_tmp13_reg_2855[0:0] === 1'b1) ? tmp_99_fu_1715_p1 : sel_tmp9_fu_1758_p3);

assign p_Val2_29_mux_fu_1236_p3 = ((brmerge_i_i8_fu_1224_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_23_fu_1194_p1);

assign p_Val2_2_60_fu_688_p3 = ((underflow_3_fu_670_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_10_fu_646_p4);

assign p_Val2_2_fu_446_p2 = ($signed(19'd0) - $signed(OP2_V_1_cast_fu_442_p1));

assign p_Val2_30_fu_2152_p4 = {{p_Val2_29_reg_2966[33:16]}};

assign p_Val2_31_fu_2203_p2 = (p_Val2_30_fu_2152_p4 + tmp_64_fu_2199_p1);

assign p_Val2_35_mux_fu_2053_p3 = ((brmerge_i_i9_fu_2029_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_28_reg_2927);

assign p_Val2_38_mux_fu_2329_p3 = ((brmerge_i_i10_fu_2311_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_31_fu_2203_p2);

assign p_Val2_3_59_fu_608_p3 = ((underflow_1_fu_492_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_3_fu_460_p1);

assign p_Val2_3_fu_460_p1 = p_Val2_2_fu_446_p2[17:0];

assign p_Val2_3_mux_fu_510_p3 = ((brmerge_i_i1_fu_498_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_3_fu_460_p1);

assign p_Val2_4_62_fu_1008_p3 = ((underflow_4_fu_982_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_16_fu_960_p1);

assign p_Val2_5_70_fu_2598_p3 = ((underflow_10_reg_3051[0:0] === 1'b1) ? 18'd131072 : p_Val2_15_reg_3039);

assign p_Val2_5_fu_538_p2 = ($signed(20'd102944) + $signed(tmp_cast_fu_534_p1));

assign p_Val2_6_63_fu_1108_p3 = ((underflow_5_fu_1082_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_19_fu_1056_p2);

assign p_Val2_6_fu_552_p4 = {{p_Val2_5_fu_538_p2[18:1]}};

assign p_Val2_6_mux_fu_600_p3 = ((brmerge_i_i2_fu_582_p2[0:0] === 1'b1) ? 18'd131071 : p_Val2_6_fu_552_p4);

assign p_Val2_7_fu_616_p3 = ((underflow_2_fu_576_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_6_fu_552_p4);

assign p_Val2_8_64_fu_1244_p3 = ((underflow_6_fu_1218_p2[0:0] === 1'b1) ? 18'd131072 : p_Val2_23_fu_1194_p1);

assign p_Val2_9_66_fu_2060_p3 = ((ap_reg_pp0_iter40_tmp_35_reg_2766[0:0] === 1'b1) ? 18'd0 : 18'd131072);

assign p_Val2_9_fu_632_p2 = ($signed(20'd945632) + $signed(tmp_cast_fu_534_p1));

assign p_Val2_s_69_fu_2562_p3 = ((underflow_9_reg_3032[0:0] === 1'b1) ? 18'd131072 : p_Val2_12_reg_3020);

assign p_Val2_s_fu_370_p2 = ($signed(19'd0) - $signed(OP2_V_cast_fu_366_p1));

assign p_not38_i2_fu_2445_p2 = ((tmp_11_fu_2405_p4 != 16'd65535) ? 1'b1 : 1'b0);

assign p_not38_i3_fu_2523_p2 = ((tmp_17_fu_2483_p4 != 16'd65535) ? 1'b1 : 1'b0);

assign p_not_i4_fu_2415_p2 = ((tmp_11_fu_2405_p4 != 16'd0) ? 1'b1 : 1'b0);

assign p_not_i5_fu_2493_p2 = ((tmp_17_fu_2483_p4 != 16'd0) ? 1'b1 : 1'b0);

assign p_not_i9_fu_2265_p2 = (deleted_zeros_1_fu_2236_p3 ^ 1'd1);

assign p_shl_cast_fu_916_p1 = p_shl_fu_908_p3;

assign p_shl_fu_908_p3 = {{ap_phi_mux_sh_assign_phi_fu_336_p4}, {1'd0}};

assign pos1_cast_fu_1597_p1 = $signed(pos1_fu_1592_p2);

assign pos1_fu_1592_p2 = (12'd2 + F2_reg_2774);

assign pos2_cast_fu_1606_p1 = $signed(pos2_fu_1601_p2);

assign pos2_fu_1601_p2 = (12'd3 + F2_reg_2774);

assign pos_fu_867_p2 = (ap_phi_mux_sh_assign_phi_fu_336_p4 + 5'd1);

assign qb_assign_1_fu_1534_p2 = (r_i_i_fu_1528_p2 & qb_fu_1466_p3);

assign qb_assign_3_fu_2193_p2 = (r_i_i1_fu_2187_p2 & qbit_fu_2161_p3);

assign qb_fu_1466_p3 = ((tmp_46_reg_2806[0:0] === 1'b1) ? isneg_5_reg_2742 : tmp_100_fu_1459_p3);

assign qbit_fu_2161_p3 = p_Val2_29_reg_2966[32'd15];

assign r_1_fu_2168_p2 = ((tmp_118_reg_2982 != 15'd0) ? 1'b1 : 1'b0);

assign r_V_fu_1806_p2 = 54'd18014398509481983 >> tmp_58_reg_2905;

assign r_fu_1510_p2 = (tmp_51_fu_1504_p2 & tmp_48_fu_1472_p2);

assign r_i_i1_fu_2187_p2 = (tmp_120_fu_2180_p3 | r_1_fu_2168_p2);

assign r_i_i_fu_1528_p2 = (tmp_107_fu_1524_p1 | r_fu_1510_p2);

assign rev1_fu_1796_p2 = (tmp_114_reg_2894 ^ 1'd1);

assign rev_fu_1624_p2 = (tmp_112_fu_1616_p3 ^ 1'd1);

assign sel_tmp10_fu_708_p3 = ((sel_tmp7_fu_702_p2[0:0] === 1'b1) ? p_Val2_7_fu_616_p3 : p_Val2_2_60_fu_688_p3);

assign sel_tmp11_fu_716_p2 = (tmp_fu_352_p3 ^ 1'd1);

assign sel_tmp12_fu_722_p2 = ((y_V == 18'd0) ? 1'b1 : 1'b0);

assign sel_tmp13_fu_1558_p2 = (tmp_40_fu_1418_p2 & icmp_reg_2821);

assign sel_tmp14_fu_728_p2 = (sel_tmp12_fu_722_p2 | sel_tmp11_fu_716_p2);

assign sel_tmp15_fu_734_p3 = ((sel_tmp14_fu_728_p2[0:0] === 1'b1) ? z_V : sel_tmp10_fu_708_p3);

assign sel_tmp16_fu_742_p2 = (sel_tmp6_fu_696_p2 & brmerge9_fu_594_p2);

assign sel_tmp17_fu_748_p3 = ((sel_tmp16_fu_742_p2[0:0] === 1'b1) ? p_Val2_6_mux_fu_600_p3 : sel_tmp15_fu_734_p3);

assign sel_tmp18_fu_756_p2 = (tmp_1_fu_360_p2 ^ 1'd1);

assign sel_tmp19_fu_774_p2 = (tmp6_fu_768_p2 & tmp5_fu_762_p2);

assign sel_tmp1_fu_1725_p2 = (tmp_38_reg_2831 ^ 1'd1);

assign sel_tmp20_fu_1695_p2 = (tmp_67_not_fu_1689_p2 | tmp_112_fu_1616_p3);

assign sel_tmp21_fu_1701_p2 = (tmp_60_fu_1678_p2 & sel_tmp20_fu_1695_p2);

assign sel_tmp22_fu_1853_p3 = ((sel_tmp21_reg_2921[0:0] === 1'b1) ? Range1_all_ones_1_reg_2887 : rev_reg_2880);

assign sel_tmp23_fu_1866_p3 = ((sel_tmp21_reg_2921[0:0] === 1'b1) ? Range1_all_zeros_fu_1838_p2 : p_119_i_fu_1849_p2);

assign sel_tmp23_not_fu_1889_p2 = (sel_tmp8_fu_1753_p2 ^ 1'd1);

assign sel_tmp24_fu_1960_p2 = (ap_reg_pp0_iter40_tmp_54_reg_2873 ^ 1'd1);

assign sel_tmp25_fu_1975_p2 = (tmp35_fu_1970_p2 & ap_reg_pp0_iter40_isneg_5_reg_2742);

assign sel_tmp26_fu_1980_p2 = (ap_reg_pp0_iter40_tmp_54_reg_2873 & ap_reg_pp0_iter40_isneg_5_reg_2742);

assign sel_tmp27_fu_2072_p3 = ((tmp_63_fu_2067_p2[0:0] === 1'b1) ? p_Val2_9_66_fu_2060_p3 : p_Val2_28_reg_2927);

assign sel_tmp28_fu_2083_p3 = ((sel_tmp57_demorgan_fu_2079_p2[0:0] === 1'b1) ? sel_tmp27_fu_2072_p3 : p_Val2_28_reg_2927);

assign sel_tmp29_fu_2090_p2 = (ap_reg_pp0_iter40_tmp_35_reg_2766 ^ 1'd1);

assign sel_tmp2_fu_1730_p2 = (sel_tmp1_fu_1725_p2 & ap_reg_pp0_iter39_QUAN_INC_reg_2783);

assign sel_tmp30_fu_2101_p2 = (tmp37_fu_2095_p2 & ap_reg_pp0_iter40_icmp1_reg_2862);

assign sel_tmp3_fu_1735_p2 = (tmp_106_reg_2837 ^ 1'd1);

assign sel_tmp4_fu_1740_p2 = (sel_tmp3_fu_1735_p2 & sel_tmp2_fu_1730_p2);

assign sel_tmp57_demorgan_fu_2079_p2 = (ap_reg_pp0_iter40_tmp_35_reg_2766 | ap_reg_pp0_iter40_icmp1_reg_2862);

assign sel_tmp5_fu_1746_p3 = ((sel_tmp4_fu_1740_p2[0:0] === 1'b1) ? p_Val2_27_reg_2843 : sel_tmp_fu_1719_p3);

assign sel_tmp6_fu_696_p2 = (tmp_fu_352_p3 & tmp_1_fu_360_p2);

assign sel_tmp7_fu_702_p2 = (underflow_2_fu_576_p2 & sel_tmp6_fu_696_p2);

assign sel_tmp8_fu_1753_p2 = (tmp_106_reg_2837 & sel_tmp2_fu_1730_p2);

assign sel_tmp9_fu_1758_p3 = ((sel_tmp8_fu_1753_p2[0:0] === 1'b1) ? p_Val2_27_reg_2843 : sel_tmp5_fu_1746_p3);

assign sel_tmp_fu_1719_p3 = ((tmp_38_reg_2831[0:0] === 1'b1) ? ap_reg_pp0_iter39_tmp_97_reg_2795 : 18'd0);

assign sh_amt_cast_fu_1410_p1 = $signed(sh_amt_reg_2789);

assign sh_amt_fu_1349_p3 = ((QUAN_INC_fu_1331_p2[0:0] === 1'b1) ? tmp_36_fu_1337_p2 : tmp_37_fu_1343_p2);

assign sh_assign_cast1_fu_926_p1 = sh_assign_reg_332;

assign signbit_1_fu_638_p3 = p_Val2_9_fu_632_p2[32'd19];

assign signbit_fu_544_p3 = p_Val2_5_fu_538_p2[32'd19];

assign signo_cast_fu_881_p3 = ((tmp_84_fu_873_p3[0:0] === 1'b1) ? 2'd1 : 2'd3);

assign storemerge_fu_1436_p3 = ((isneg_5_reg_2742[0:0] === 1'b1) ? 18'd262143 : 18'd0);

assign this_assign_6_4_fu_2106_p3 = ((sel_tmp30_fu_2101_p2[0:0] === 1'b1) ? p_Val2_35_mux_fu_2053_p3 : sel_tmp28_fu_2083_p3);

assign tmp135_cast_fu_1141_p1 = $signed(tmp31_fu_1135_p2);

assign tmp136_demorgan_fu_1772_p2 = (tmp_108_reg_2849 | sel_tmp13_reg_2855);

assign tmp137_cast_cast_fu_1563_p3 = ((QUAN_INC_reg_2783[0:0] === 1'b1) ? 12'd2 : 12'd1);

assign tmp143_demorgan_fu_2294_p2 = (p_38_i_fu_2260_p2 | brmerge40_demorgan_i_fu_2288_p2);

assign tmp31_fu_1135_p2 = (tmp_46_cast_cast_fu_1131_p1 ^ 4'd4);

assign tmp32_fu_1776_p2 = (tmp136_demorgan_fu_1772_p2 ^ 1'd1);

assign tmp33_fu_1643_p2 = (rev_fu_1624_p2 & lD_fu_1639_p1);

assign tmp34_fu_1895_p2 = (sel_tmp23_not_fu_1889_p2 | sel_tmp13_reg_2855);

assign tmp35_fu_1970_p2 = (sel_tmp24_fu_1960_p2 & newsignbit_7_reg_2939);

assign tmp36_fu_2041_p2 = (overflow_2_fu_2006_p2 | neg_src_0_i_not_fu_2035_p2);

assign tmp37_fu_2095_p2 = (sel_tmp29_fu_2090_p2 & brmerge5_fu_2047_p2);

assign tmp38_fu_2300_p2 = (tmp143_demorgan_fu_2294_p2 ^ 1'd1);

assign tmp39_fu_2317_p2 = (tmp_67_fu_2277_p2 | brmerge40_demorgan_i_fu_2288_p2);

assign tmp5_fu_762_p2 = (tmp_42_fu_396_p3 & sel_tmp18_fu_756_p2);

assign tmp6_fu_768_p2 = (tmp_fu_352_p3 & brmerge6_fu_682_p2);

assign tmp_100_fu_1459_p3 = man_V_reg_2756[tmp_71_cast_fu_1455_p1];

assign tmp_101_fu_1373_p1 = F2_fu_1325_p2[5:0];

assign tmp_102_fu_1482_p3 = ((tmp_50_reg_2816[0:0] === 1'b1) ? 6'd0 : tmp_75_cast_op_fu_1477_p2);

assign tmp_103_fu_1489_p1 = tmp_102_fu_1482_p3;

assign tmp_104_fu_1493_p2 = 54'd18014398509481983 >> tmp_103_fu_1489_p1;

assign tmp_107_fu_1524_p1 = p_Val2_26_fu_1443_p3[0:0];

assign tmp_109_fu_1389_p4 = {{F2_fu_1325_p2[11:4]}};

assign tmp_110_fu_1576_p4 = {{tmp_53_fu_1570_p2[11:1]}};

assign tmp_112_fu_1616_p3 = pos1_fu_1592_p2[32'd11];

assign tmp_115_fu_1923_p3 = pos1_reg_2868[32'd11];

assign tmp_118_fu_2128_p1 = p_Val2_29_fu_2624_p2[14:0];

assign tmp_119_fu_2173_p3 = p_Val2_29_reg_2966[32'd33];

assign tmp_11_fu_2405_p4 = {{grp_fu_2365_p2[33:18]}};

assign tmp_120_fu_2180_p3 = p_Val2_29_reg_2966[32'd16];

assign tmp_122_fu_2229_p3 = p_Val2_29_reg_2966[32'd34];

assign tmp_13_fu_2427_p2 = (isneg_6_fu_2385_p3 ^ 1'd1);

assign tmp_17_fu_2483_p4 = {{grp_fu_2379_p2[33:18]}};

assign tmp_18_fu_2505_p2 = (isneg_7_fu_2463_p3 ^ 1'd1);

assign tmp_1_fu_360_p2 = (($signed(y_V) > $signed(18'd0)) ? 1'b1 : 1'b0);

assign tmp_20_fu_889_p2 = ((ap_phi_mux_p_Val2_4_phi_fu_266_p4 != 18'd0) ? 1'b1 : 1'b0);

assign tmp_21_fu_970_p2 = (isneg_2_fu_953_p3 ^ 1'd1);

assign tmp_22_fu_976_p2 = (newsignbit_4_fu_963_p3 ^ 1'd1);

assign tmp_23_fu_1070_p2 = (isneg_3_fu_1048_p3 ^ 1'd1);

assign tmp_24_fu_1076_p2 = (newsignbit_5_fu_1062_p3 ^ 1'd1);

assign tmp_25_fu_903_p1 = ap_phi_mux_sh_assign_phi_fu_336_p4;

assign tmp_26_fu_1206_p2 = (isneg_4_fu_1186_p3 ^ 1'd1);

assign tmp_27_fu_1212_p2 = (newsignbit_6_fu_1198_p3 ^ 1'd1);

assign tmp_28_fu_1124_p3 = {{i_op_assign_reg_2682}, {1'd0}};

assign tmp_29_fu_920_p2 = (7'd0 - p_shl_cast_fu_916_p1);

assign tmp_2_fu_410_p2 = (newsignbit_fu_388_p3 ^ 1'd1);

assign tmp_30_fu_1145_p2 = (tmp_29_reg_2694 ^ tmp135_cast_fu_1141_p1);

assign tmp_33_fu_1285_p1 = exp_tmp_V_fu_1275_p4;

assign tmp_34_fu_1293_p3 = {{1'd1}, {tmp_96_fu_1289_p1}};

assign tmp_35_fu_1319_p2 = ((tmp_94_fu_1263_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_36_fu_1337_p2 = ($signed(12'd4080) + $signed(F2_fu_1325_p2));

assign tmp_37_cast_fu_1034_p1 = $signed(p_Val2_4_reg_263);

assign tmp_37_fu_1343_p2 = (12'd16 - F2_fu_1325_p2);

assign tmp_38_fu_1413_p2 = ((F2_reg_2774 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_39_fu_1361_p2 = ((sh_amt_fu_1349_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_3_fu_480_p2 = (isneg_1_fu_452_p3 ^ 1'd1);

assign tmp_40_fu_1418_p2 = ((sh_amt_reg_2789 < 12'd18) ? 1'b1 : 1'b0);

assign tmp_41_fu_1423_p1 = $unsigned(sh_amt_cast_fu_1410_p1);

assign tmp_42_fu_396_p3 = y_V[32'd17];

assign tmp_43_cast_fu_1173_p1 = $signed(ap_phi_mux_p_Val2_21_phi_fu_256_p4);

assign tmp_43_fu_1427_p2 = $signed(man_V_reg_2756) >>> tmp_41_fu_1423_p1;

assign tmp_44_cast_fu_1177_p1 = $signed(p_Val2_20_reg_2721);

assign tmp_44_fu_1707_p1 = $signed(ap_reg_pp0_iter39_tmp_97_reg_2795);

assign tmp_45_fu_1710_p2 = tmp_44_fu_1707_p1 << sh_amt_cast_reg_2826;

assign tmp_46_cast_cast_fu_1131_p1 = $signed(tmp_28_fu_1124_p3);

assign tmp_46_fu_1367_p2 = (($signed(tmp_36_fu_1337_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_47_fu_1450_p2 = ($signed(12'd4079) + $signed(F2_reg_2774));

assign tmp_48_fu_1472_p2 = (($signed(F2_reg_2774) > $signed(12'd17)) ? 1'b1 : 1'b0);

assign tmp_49_cast_fu_1150_p1 = $signed(tmp_30_fu_1145_p2);

assign tmp_49_fu_1377_p2 = ($signed(12'd4078) + $signed(F2_fu_1325_p2));

assign tmp_4_fu_486_p2 = (newsignbit_1_fu_464_p3 ^ 1'd1);

assign tmp_50_fu_1383_p2 = (($signed(tmp_49_fu_1377_p2) > $signed(12'd53)) ? 1'b1 : 1'b0);

assign tmp_51_fu_1504_p2 = ((p_Result_s_fu_1499_p2 != 54'd0) ? 1'b1 : 1'b0);

assign tmp_52_fu_1540_p1 = qb_assign_1_fu_1534_p2;

assign tmp_53_fu_1570_p2 = (tmp137_cast_cast_fu_1563_p3 + exp_V_fu_1405_p2);

assign tmp_54_fu_1610_p2 = (($signed(pos1_fu_1592_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_55_fu_1630_p1 = $unsigned(pos1_cast_fu_1597_p1);

assign tmp_56_fu_1634_p2 = $signed(man_V_reg_2756) >>> tmp_55_fu_1630_p1;

assign tmp_57_fu_1663_p2 = (($signed(pos2_fu_1601_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_58_fu_1669_p1 = $unsigned(pos2_cast_fu_1606_p1);

assign tmp_59_fu_1833_p2 = ((Range2_V_1_reg_2910 == 54'd0) ? 1'b1 : 1'b0);

assign tmp_60_fu_1678_p2 = ((pos2_fu_1601_p2 == 12'd54) ? 1'b1 : 1'b0);

assign tmp_61_fu_1954_p2 = (1'd1 ^ Range1_all_ones_2_i_65_fu_1950_p2);

assign tmp_62_fu_2001_p2 = (ap_reg_pp0_iter40_isneg_5_reg_2742 ^ 1'd1);

assign tmp_63_fu_2067_p2 = (underflow_7_fu_2023_p2 | ap_reg_pp0_iter40_tmp_35_reg_2766);

assign tmp_64_fu_2199_p1 = qb_assign_3_fu_2193_p2;

assign tmp_65_fu_2217_p2 = (newsignbit_8_fu_2209_p3 ^ 1'd1);

assign tmp_66_fu_2242_p2 = (tmp_122_fu_2229_p3 ^ 1'd1);

assign tmp_67_fu_2277_p2 = (signbit_2_reg_2975 ^ 1'd1);

assign tmp_67_not_fu_1689_p2 = (tmp_57_fu_1663_p2 ^ 1'd1);

assign tmp_6_fu_2361_p1 = $signed(p_1_reg_320);

assign tmp_71_cast_fu_1455_p1 = $signed(tmp_47_fu_1450_p2);

assign tmp_75_cast_op_fu_1477_p2 = (6'd7 - tmp_101_reg_2811);

assign tmp_7_fu_404_p2 = (isneg_fu_376_p3 ^ 1'd1);

assign tmp_84_fu_873_p3 = ap_phi_mux_p_Val2_4_phi_fu_266_p4[32'd17];

assign tmp_88_fu_1038_p1 = p_Val2_17_fu_1028_p2[17:0];

assign tmp_8_fu_664_p2 = (newsignbit_3_fu_656_p3 ^ 1'd1);

assign tmp_94_fu_1263_p1 = ireg_V_fu_1260_p1[62:0];

assign tmp_96_fu_1289_p1 = ireg_V_fu_1260_p1[51:0];

assign tmp_97_fu_1357_p1 = man_V_fu_1311_p3[17:0];

assign tmp_98_fu_1432_p1 = tmp_43_fu_1427_p2[17:0];

assign tmp_99_fu_1715_p1 = tmp_45_fu_1710_p2[17:0];

assign tmp_9_fu_570_p2 = (newsignbit_2_fu_562_p3 ^ 1'd1);

assign tmp_cast_fu_534_p1 = $signed(tmp_s_fu_526_p3);

assign tmp_fu_352_p3 = x_V[32'd17];

assign tmp_s_fu_526_p3 = {{z_V}, {1'd0}};

assign underflow_10_fu_2535_p2 = (isneg_7_fu_2463_p3 & brmerge39_i3_fu_2529_p2);

assign underflow_10_not_fu_2581_p2 = (underflow_10_reg_3051 ^ 1'd1);

assign underflow_1_fu_492_p2 = (tmp_4_fu_486_p2 & isneg_1_fu_452_p3);

assign underflow_2_fu_576_p2 = (tmp_9_fu_570_p2 & signbit_fu_544_p3);

assign underflow_2_not_fu_504_p2 = (tmp_3_fu_480_p2 | newsignbit_1_fu_464_p3);

assign underflow_3_fu_670_p2 = (tmp_8_fu_664_p2 & signbit_1_fu_638_p3);

assign underflow_4_fu_982_p2 = (tmp_22_fu_976_p2 & isneg_2_fu_953_p3);

assign underflow_4_not_fu_994_p2 = (tmp_21_fu_970_p2 | newsignbit_4_fu_963_p3);

assign underflow_5_fu_1082_p2 = (tmp_24_fu_1076_p2 & isneg_3_fu_1048_p3);

assign underflow_5_not_fu_1094_p2 = (tmp_23_fu_1070_p2 | newsignbit_5_fu_1062_p3);

assign underflow_6_fu_1218_p2 = (tmp_27_fu_1212_p2 & isneg_4_fu_1186_p3);

assign underflow_6_not_fu_1230_p2 = (tmp_26_fu_1206_p2 | newsignbit_6_fu_1198_p3);

assign underflow_7_fu_2023_p2 = (neg_src_0_i_fu_1984_p3 & brmerge121_i_fu_2017_p2);

assign underflow_8_fu_2306_p2 = (tmp38_fu_2300_p2 & signbit_2_reg_2975);

assign underflow_8_not_fu_2323_p2 = (tmp39_fu_2317_p2 | p_38_i_fu_2260_p2);

assign underflow_9_fu_2457_p2 = (isneg_6_fu_2385_p3 & brmerge39_i2_fu_2451_p2);

assign underflow_9_not_fu_2545_p2 = (underflow_9_reg_3032 ^ 1'd1);

assign underflow_fu_416_p2 = (tmp_2_fu_410_p2 & isneg_fu_376_p3);

assign underflow_not_fu_428_p2 = (tmp_7_fu_404_p2 | newsignbit_fu_388_p3);

assign x_ant_V_1_fu_1016_p3 = ((underflow_4_not_fu_994_p2[0:0] === 1'b1) ? p_Val2_21_mux_fu_1000_p3 : p_Val2_4_62_fu_1008_p3);

assign x_ant_V_2_fu_812_p3 = ((sel_tmp7_fu_702_p2[0:0] === 1'b1) ? y_V : x_ant_V_fu_624_p3);

assign x_ant_V_3_fu_820_p3 = ((sel_tmp14_fu_728_p2[0:0] === 1'b1) ? x_V : x_ant_V_2_fu_812_p3);

assign x_ant_V_4_fu_828_p3 = ((sel_tmp16_fu_742_p2[0:0] === 1'b1) ? y_V : x_ant_V_3_fu_820_p3);

assign x_ant_V_5_fu_836_p3 = ((sel_tmp19_fu_774_p2[0:0] === 1'b1) ? x_ant_V_fu_624_p3 : x_ant_V_4_fu_828_p3);

assign x_ant_V_fu_624_p3 = ((underflow_2_not_fu_504_p2[0:0] === 1'b1) ? p_Val2_3_mux_fu_510_p3 : p_Val2_3_59_fu_608_p3);

assign x_div_V_fu_930_p2 = $signed(ap_phi_mux_p_Val2_7_61_phi_fu_276_p4) >>> sh_assign_cast1_fu_926_p1;

assign x_out_V = ((brmerge7_fu_2550_p2[0:0] === 1'b1) ? p_Val2_14_mux_fu_2555_p3 : p_Val2_s_69_fu_2562_p3);

assign y_ant_V_1_fu_1116_p3 = ((underflow_5_not_fu_1094_p2[0:0] === 1'b1) ? p_Val2_25_mux_fu_1100_p3 : p_Val2_6_63_fu_1108_p3);

assign y_ant_V_2_fu_780_p3 = ((sel_tmp7_fu_702_p2[0:0] === 1'b1) ? y_ant_V_fu_518_p3 : x_V);

assign y_ant_V_3_fu_788_p3 = ((sel_tmp14_fu_728_p2[0:0] === 1'b1) ? y_V : y_ant_V_2_fu_780_p3);

assign y_ant_V_4_fu_796_p3 = ((sel_tmp16_fu_742_p2[0:0] === 1'b1) ? y_ant_V_fu_518_p3 : y_ant_V_3_fu_788_p3);

assign y_ant_V_5_fu_804_p3 = ((sel_tmp19_fu_774_p2[0:0] === 1'b1) ? x_V : y_ant_V_4_fu_796_p3);

assign y_ant_V_fu_518_p3 = ((underflow_not_fu_428_p2[0:0] === 1'b1) ? p_Val2_1_mux_fu_434_p3 : p_Val2_1_58_fu_472_p3);

assign y_div_V_fu_936_p2 = $signed(p_Val2_4_reg_263) >>> sh_assign_cast1_fu_926_p1;

assign y_out_V = ((brmerge8_fu_2586_p2[0:0] === 1'b1) ? p_Val2_17_mux_fu_2591_p3 : p_Val2_5_70_fu_2598_p3);

assign z_next_V_fu_1252_p3 = ((underflow_6_not_fu_1230_p2[0:0] === 1'b1) ? p_Val2_29_mux_fu_1236_p3 : p_Val2_8_64_fu_1244_p3);

assign z_out_V = p_s_reg_307;

always @ (posedge ap_clk) begin
    tmp_29_reg_2694[0] <= 1'b0;
    tmp_33_reg_2751[11] <= 1'b0;
    tmp_58_reg_2905[53:32] <= 22'b0000000000000000000000;
end

endmodule //Cordic
